UndefinedByteType = -1
ZeroByteSize = -2
INTEGER_MASK = 0x10000
INTEGER1x1 = 0x10001 --00000001
INTEGER1x2 = 0x10003 --00000011
INTEGER1x3 = 0x1000  --00000111
INTEGER1x4 = 0x1000f --00001111
INTEGER1x5 = 0x1001f --00011111
INTEGER1x6 = 0x1003f --00111111
INTEGER1x7 = 0x1007f --01111111
INTEGER2x4 = 0x2000f --00001111
INTEGER4x4 = 0x4000f --00001111
ByteSize12 = 12
ByteSize16 = 16

Node = {}


function Node:new(addr, desc, id, init, min, max, valueByteSizeType, opt, pos)
    local o = {}
    setmetatable(o, self)
    self.__index = self
    o.addr = addr
    o.desc = desc
    o.opt = opt
    o.pos = pos
    return o
end

function Node:new_parent(addr, offset, desc, id, children)
    local o = {}
    setmetatable(o, self)
    self.__index = self
    o.addr = addr
    o.offset = offset
    o.desc = desc
    o.id = id
    o.children = children
    return o
end

function Node:tostring()
    return string.format("0x%02X ", self.addr) .. self.desc
end

local STP =
{
    Node:new(0x0000, "Side 1 Sound Mode", "NESTP_SND_MODE_SD1", 1, 1, 4, INTEGER1x3),
    Node:new(0x0001, "Side 1 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD1", 84, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Side 1 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Side 1 Live Set PC (PC)", "NESTP_LIV_PC_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Side 1 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD1", 85, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Side 1 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Side 1 Studio Set PC (PC)", "NESTP_PRF_PC_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Side 1 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD1", 100, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Side 1 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD1", 64, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD1", 64, 61, 67, INTEGER1x3),
    Node:new(0x000A, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD1", 127, 0, 127, INTEGER1x7),
    Node:new(0x000C, "Side 2 Sound Mode", "NESTP_SND_MODE_SD2", 1, 1, 4, INTEGER1x3),
    Node:new(0x000D, "Side 2 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD2", 84, 0, 127, INTEGER1x7),
    Node:new(0x000E, "Side 2 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Side 2 Live Set PC (PC)", "NESTP_LIV_PC_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Side 2 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD2", 85, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Side 2 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Side 2 Studio Set PC (PC)", "NESTP_PRF_PC_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Side 2 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD2", 100, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Side 2 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD2", 64, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD2", 64, 61, 67, INTEGER1x3),
    Node:new(0x0016, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD2", 127, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Side 3 Sound Mode", "NESTP_SND_MODE_SD3", 1, 1, 4, INTEGER1x3),
    Node:new(0x0019, "Side 3 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD3", 84, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Side 3 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Side 3 Live Set PC (PC)", "NESTP_LIV_PC_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Side 3 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD3", 85, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Side 3 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Side 3 Studio Set PC (PC)", "NESTP_PRF_PC_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Side 3 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD3", 100, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Side 3 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD3", 64, 0, 127, INTEGER1x7),
    Node:new(0x0021, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD3", 64, 61, 67, INTEGER1x3),
    Node:new(0x0022, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0023, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD3", 127, 0, 127, INTEGER1x7),
    Node:new(0x0024, "Side 4 Sound Mode", "NESTP_SND_MODE_SD4", 1, 1, 4, INTEGER1x3),
    Node:new(0x0025, "Side 4 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD4", 84, 0, 127, INTEGER1x7),
    Node:new(0x0026, "Side 4 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0027, "Side 4 Live Set PC (PC)", "NESTP_LIV_PC_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0028, "Side 4 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD4", 85, 0, 127, INTEGER1x7),
    Node:new(0x0029, "Side 4 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002A, "Side 4 Studio Set PC (PC)", "NESTP_PRF_PC_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002B, "Side 4 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD4", 100, 0, 127, INTEGER1x7),
    Node:new(0x002C, "Side 4 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD4", 64, 0, 127, INTEGER1x7),
    Node:new(0x002D, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD4", 64, 61, 67, INTEGER1x3),
    Node:new(0x002E, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002F, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD4", 127, 0, 127, INTEGER1x7),
    Node:new(0x0030, "MFX1 Switch", "NESTP_MFX1_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0031, "MFX2 Switch", "NESTP_MFX2_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0032, "MFX3 Switch", "NESTP_MFX3_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0033, "MFX4 Switch", "NESTP_MFX4_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0034, "Chorus Switch", "NESTP_CHO_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0035, "Reverb Switch", "NESTP_REV_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0036, "Input Effect Switch", "NESTP_IFX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0037, "GM Map", "NESTP_GM_MAP", 0, 0, 1, INTEGER1x4),
}

local STP = -- Setup
{
    Node:new(0x0000, "Side 1 Sound Mode", "NESTP_SND_MODE_SD1", 1, 1, 4, INTEGER1x3),
    Node:new(0x0001, "Side 1 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD1", 84, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Side 1 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Side 1 Live Set PC (PC)", "NESTP_LIV_PC_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Side 1 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD1", 85, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Side 1 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Side 1 Studio Set PC (PC)", "NESTP_PRF_PC_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Side 1 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD1", 100, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Side 1 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD1", 64, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD1", 64, 61, 67, INTEGER1x3),
    Node:new(0x000A, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD1", 0, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD1", 127, 0, 127, INTEGER1x7),
    Node:new(0x000C, "Side 2 Sound Mode", "NESTP_SND_MODE_SD2", 1, 1, 4, INTEGER1x3),
    Node:new(0x000D, "Side 2 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD2", 84, 0, 127, INTEGER1x7),
    Node:new(0x000E, "Side 2 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Side 2 Live Set PC (PC)", "NESTP_LIV_PC_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Side 2 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD2", 85, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Side 2 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Side 2 Studio Set PC (PC)", "NESTP_PRF_PC_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Side 2 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD2", 100, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Side 2 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD2", 64, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD2", 64, 61, 67, INTEGER1x3),
    Node:new(0x0016, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD2", 127, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Side 3 Sound Mode", "NESTP_SND_MODE_SD3", 1, 1, 4, INTEGER1x3),
    Node:new(0x0019, "Side 3 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD3", 84, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Side 3 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Side 3 Live Set PC (PC)", "NESTP_LIV_PC_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Side 3 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD3", 85, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Side 3 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Side 3 Studio Set PC (PC)", "NESTP_PRF_PC_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Side 3 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD3", 100, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Side 3 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD3", 64, 0, 127, INTEGER1x7),
    Node:new(0x0021, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD3", 64, 61, 67, INTEGER1x3),
    Node:new(0x0022, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0023, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD3", 127, 0, 127, INTEGER1x7),
    Node:new(0x0024, "Side 4 Sound Mode", "NESTP_SND_MODE_SD4", 1, 1, 4, INTEGER1x3),
    Node:new(0x0025, "Side 4 Live Set BS MSB (CC# 0)", "NESTP_LIV_BS_MSB_SD4", 84, 0, 127, INTEGER1x7),
    Node:new(0x0026, "Side 4 Live Set BS LSB (CC# 32)", "NESTP_LIV_BS_LSB_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0027, "Side 4 Live Set PC (PC)", "NESTP_LIV_PC_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0028, "Side 4 Studio Set BS MSB (CC# 0)", "NESTP_PRF_BS_MSB_SD4", 85, 0, 127, INTEGER1x7),
    Node:new(0x0029, "Side 4 Studio Set BS LSB (CC# 32)", "NESTP_PRF_BS_LSB_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002A, "Side 4 Studio Set PC (PC)", "NESTP_PRF_PC_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002B, "Side 4 Live Mode Level (CC# 7)", "NESTP_LIV_LEVEL_SD4", 100, 0, 127, INTEGER1x7),
    Node:new(0x002C, "Side 4 Live Mode Pan (CC# 10)", "NESTP_LIV_PAN_SD4", 64, 0, 127, INTEGER1x7),
    Node:new(0x002D, "Live Mode Octave Shift ", "NESTP_LIV_OCT_SD4", 64, 61, 67, INTEGER1x3),
    Node:new(0x002E, "Live Mode Keyboard Range Lower ", "NESTP_LIV_KRNG_L_SD4", 0, 0, 127, INTEGER1x7),
    Node:new(0x002F, "Live Mode Keyboard Range Upper ", "NESTP_LIV_KRNG_U_SD4", 127, 0, 127, INTEGER1x7),
    Node:new(0x0030, "MFX1 Switch", "NESTP_MFX1_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0031, "MFX2 Switch", "NESTP_MFX2_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0032, "MFX3 Switch", "NESTP_MFX3_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0033, "MFX4 Switch", "NESTP_MFX4_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0034, "Chorus Switch", "NESTP_CHO_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0035, "Reverb Switch", "NESTP_REV_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0036, "Input Effect Switch", "NESTP_IFX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0037, "GM Map", "NESTP_GM_MAP", 0, 0, 1, INTEGER1x4),
}

local SC = --  System Common
{
    Node:new(0x0000, "Master Tune", "NESC_TUNE", 1024, 24, 2024, INTEGER4x4),
    Node:new(0x0004, "Master Key Shift", "NESC_KEY_SHIFT", 64, 40, 88, INTEGER1x6),
    Node:new(0x0005, "Master Level", "NESC_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Scale Tune Switch", "NESC_SCALE_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0009, "Live Set Main Channel", "NESC_LIV_MAIN_CH", 0, 0, 15, INTEGER1x5),
    Node:new(0x000A, "Live Set Sub 1 Channel", "NESC_LIV_SUB1_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x000B, "Live Set Sub 2 Channel", "NESC_LIV_SUB2_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x000C, "Live Set Sub 3 Channel", "NESC_LIV_SUB3_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x000D, "Live Set Sub 4 Channel", "NESC_LIV_SUB4_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x000E, "Live Set Sub 5 Channel", "NESC_LIV_SUB5_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x000F, "Live Set Sub 6 Channel", "NESC_LIV_SUB6_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x0010, "Live Set Sub 7 Channel", "NESC_LIV_SUB7_CH", 0, 0, 16, INTEGER1x5),
    Node:new(0x0011, "Studio Set Control Channel", "NESC_PRF_CTRL_CH", 15, 0, 16, INTEGER1x5),
    Node:new(0x0012, "Live Set Scale Tune Type", "NESC_SCALE_TYPE", 1, 0, 8, INTEGER1x7),
    Node:new(0x0013, "Live Set Scale Tune Key", "NESC_SCALE_KEY", 0, 0, 11, INTEGER1x7),
    Node:new(0x0014, "Live Set Scale Tune for C", "NESC_TUNE_C", 64, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Live Set Scale Tune for C#", "NESC_TUNE_CS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Live Set Scale Tune for D", "NESC_TUNE_D", 64, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Live Set Scale Tune for D#", "NESC_TUNE_DS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Live Set Scale Tune for E", "NESC_TUNE_E", 64, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Live Set Scale Tune for F", "NESC_TUNE_F", 64, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Live Set Scale Tune for F#", "NESC_TUNE_FS", 64, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Live Set Scale Tune for G", "NESC_TUNE_G", 64, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Live Set Scale Tune for G#", "NESC_TUNE_GS", 64, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Live Set Scale Tune for A", "NESC_TUNE_A", 64, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Live Set Scale Tune for A#", "NESC_TUNE_AS", 64, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Live Set Scale Tune for B", "NESC_TUNE_B", 64, 0, 127, INTEGER1x7),
    Node:new(0x0020, "System Control 1 Source", "NESC_CTRL1_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x0021, "System Control 2 Source", "NESC_CTRL2_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x0022, "System Control 3 Source", "NESC_CTRL3_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x0023, "System Control 4 Source", "NESC_CTRL4_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x0024, "Control Source", "NESC_CTRL_SRC", 1, 0, 1, INTEGER1x1),
    Node:new(0x0025, "System Clock Source", "NESC_CLK_SRC", 0, 0, 1, INTEGER1x1),
    Node:new(0x0026, "System Tempo", "NESC_TEMPO", 120, 20, 250, INTEGER2x4),
    Node:new(0x0028, "Tempo Override", "NESC_OR_TEMPO", 0, 0, 1, INTEGER1x1),
    Node:new(0x0029, "Receive Program Change", "NESC_RX_PC", 1, 0, 1, INTEGER1x1),
    Node:new(0x002A, "Receive Bank Select", "NESC_RX_BS", 1, 0, 1, INTEGER1x1),
    Node:new(0x002B, "Center Speaker Switch", "NESC_RSS_CENTERSP_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x002C, "Subwoofer Switch", "NESC_RSS_WOOFER_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x002D, "Output Mode", "NESC_RSS_OUTMODE", 0, 0, 1, INTEGER1x1),
    Node:new(0x002E, "USB Audio Sampling Rate", "NESC_USB_SAMP_RATE", 0, 0, 2, INTEGER1x2),
}

local VF = --  Virtual MFX
{
    Node:new(0x0000, "MFX Type", "NEVF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "NEVF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "NEVF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "NEVF_MFX_REV_SEND", 100, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "NEVF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "NEVF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "NEVF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "NEVF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "NEVF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "NEVF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "NEVF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "NEVF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "NEVF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "NEVF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "NEVF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "NEVF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "NEVF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "NEVF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "NEVF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "NEVF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "NEVF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "NEVF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "NEVF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "NEVF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "NEVF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "NEVF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "NEVF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "NEVF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "NEVF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "NEVF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "NEVF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "NEVF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "NEVF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "NEVF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "NEVF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "NEVF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "NEVF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "NEVF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "NEVF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "NEVF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "NEVF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "NEVF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "NEVF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "NEVF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "NEVF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "NEVF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "NEVF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "NEVF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local VP = --  Virtual Part
{
    Node:new(0x0000, "Tone Level", "NEVP_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0001, "Tone Pan", "NEVP_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0002, "TFX Switch", "NEVP_TFX_SW", 0, 0, 1, INTEGER1x1),
}

local FC = --  Studio Set Common
{
    Node:new(0x0000, "Studio Set Name", "NEFC_NAME", 0, 32, 127, ByteSize16),
    Node:new(0x0011, "MFX1 Control Channel", "NEFC_MFX1_CTRL_CH", 16, 0, 16, INTEGER1x6),
    Node:new(0x0012, "MFX2 Control Channel", "NEFC_MFX2_CTRL_CH", 16, 0, 16, INTEGER1x6),
    Node:new(0x0013, "MFX3 Control Channel", "NEFC_MFX3_CTRL_CH", 16, 0, 16, INTEGER1x6),
    Node:new(0x0014, "MFX Control Src1", "NEFC_MFX_CTRL_SRC1", 1, 0, 1, INTEGER1x1),
    Node:new(0x0015, "MFX Control Src2", "NEFC_MFX_CTRL_SRC2", 1, 0, 1, INTEGER1x1),
    Node:new(0x0016, "MFX Control Src3", "NEFC_MFX_CTRL_SRC3", 1, 0, 1, INTEGER1x1),
    Node:new(0x0017, "MFX Control Src4", "NEFC_MFX_CTRL_SRC4", 1, 0, 1, INTEGER1x1),
    Node:new(0x0018, "Voice Reserve 1 ", "NEFC_VOICE_RESERV1", 0, 0, 64, INTEGER1x7),
    Node:new(0x0019, "Voice Reserve 2 ", "NEFC_VOICE_RESERV2", 0, 0, 64, INTEGER1x7),
    Node:new(0x001A, "Voice Reserve 3 ", "NEFC_VOICE_RESERV3", 0, 0, 64, INTEGER1x7),
    Node:new(0x001B, "Voice Reserve 4 ", "NEFC_VOICE_RESERV4", 0, 0, 64, INTEGER1x7),
    Node:new(0x001C, "Voice Reserve 5 ", "NEFC_VOICE_RESERV5", 0, 0, 64, INTEGER1x7),
    Node:new(0x001D, "Voice Reserve 6 ", "NEFC_VOICE_RESERV6", 0, 0, 64, INTEGER1x7),
    Node:new(0x001E, "Voice Reserve 7 ", "NEFC_VOICE_RESERV7", 0, 0, 64, INTEGER1x7),
    Node:new(0x001F, "Voice Reserve 8 ", "NEFC_VOICE_RESERV8", 0, 0, 64, INTEGER1x7),
    Node:new(0x0020, "Voice Reserve 9 ", "NEFC_VOICE_RESERV9", 0, 0, 64, INTEGER1x7),
    Node:new(0x0021, "Voice Reserve 10", "NEFC_VOICE_RESERV10", 0, 0, 64, INTEGER1x7),
    Node:new(0x0022, "Voice Reserve 11", "NEFC_VOICE_RESERV11", 0, 0, 64, INTEGER1x7),
    Node:new(0x0023, "Voice Reserve 12", "NEFC_VOICE_RESERV12", 0, 0, 64, INTEGER1x7),
    Node:new(0x0024, "Voice Reserve 13", "NEFC_VOICE_RESERV13", 0, 0, 64, INTEGER1x7),
    Node:new(0x0025, "Voice Reserve 14", "NEFC_VOICE_RESERV14", 0, 0, 64, INTEGER1x7),
    Node:new(0x0026, "Voice Reserve 15", "NEFC_VOICE_RESERV15", 0, 0, 64, INTEGER1x7),
    Node:new(0x0027, "Voice Reserve 16", "NEFC_VOICE_RESERV16", 0, 0, 64, INTEGER1x7),
    Node:new(0x0038, "MFX Structure", "NEFC_MFX_STRUCT", 0, 0, 15, INTEGER1x4),
    Node:new(0x0039, "Tone Control 1 Source", "NEFC_CTRL1_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x003A, "Tone Control 2 Source", "NEFC_CTRL2_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x003B, "Tone Control 3 Source", "NEFC_CTRL3_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x003C, "Tone Control 4 Source", "NEFC_CTRL4_SRC", 0, 0, 97, INTEGER1x7),
    Node:new(0x003D, "Studio Set Tempo", "NEFC_OR_TEMPO", 120, 20, 250, INTEGER2x4),
    Node:new(0x003F, "Solo Part", "NEFC_SOLO_PART", 0, 0, 16, INTEGER1x5),
    Node:new(0x0040, "Reverb Switch", "NEFC_REVERB_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0041, "Chorus Switch", "NEFC_CHORUS_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0042, "Mastering EQ Switch", "NEFC_MASTER_EQ_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0043, "Drum Comp/EQ Switch", "NEFC_COMPEQ_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0044, "Drum Comp/EQ Part", "NEFC_COMPEQ_PART", 9, 0, 15, INTEGER1x4),
    Node:new(0x0045, "Drum Comp/EQ 1  Output Assign", "NEFC_COMPEQ1_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x0046, "Drum Comp/EQ 2  Output Assign", "NEFC_COMPEQ2_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x0047, "Drum Comp/EQ 3  Output Assign", "NEFC_COMPEQ3_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x0048, "Drum Comp/EQ 4  Output Assign", "NEFC_COMPEQ4_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x0049, "Drum Comp/EQ 5  Output Assign", "NEFC_COMPEQ5_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x004A, "Drum Comp/EQ 6  Output Assign", "NEFC_COMPEQ6_ASSIGN", 0, 0, 12, INTEGER1x4),
    Node:new(0x004B, "Audio Input Source Select", "NEFC_IN_SRC_SELECT", 0, 0, 1, INTEGER1x1),
    Node:new(0x004C, "Audio Input Level", "NEFC_IN_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x004D, "Audio Input Chorus Send Level", "NEFC_IN_CHO_SEND_LEVEL", 0, 0, 127, INTEGER1x7),
    Node:new(0x004E, "Audio Input Reverb Send Level", "NEFC_IN_REV_SEND_LEVEL", 0, 0, 127, INTEGER1x7),
    Node:new(0x004F, "Audio Input Mute Switch", "NEFC_IN_MUTE_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0050, "Expansion Slot 1 RomID", "NEFC_EXP_SLOT1_ROMID", 0, 0, 127, INTEGER1x7),
    Node:new(0x0051, "Expansion Slot 2 RomID", "NEFC_EXP_SLOT2_ROMID", 0, 0, 127, INTEGER1x7),
    Node:new(0x0052, "Expansion Slot 3 RomID", "NEFC_EXP_SLOT3_ROMID", 0, 0, 127, INTEGER1x7),
    Node:new(0x0053, "Expansion Slot 4 RomID", "NEFC_EXP_SLOT4_ROMID", 0, 0, 127, INTEGER1x7),
}

local FH = --  Studio Set Common Chorus
{
    Node:new(0x0000, "Chorus Type", "NEFH_CHO_TYPE", 1, 0, 3, INTEGER1x4, "chorus"),
    Node:new(0x0001, "Chorus Level", "NEFH_CHO_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Chorus Output Assign ", "NEFH_CHO_OUT_ASGN", 0, 0, 3, INTEGER1x2),
    Node:new(0x0003, "Chorus Output Select ", "NEFH_CHO_OUT_SELECT", 0, 0, 2, INTEGER1x2),
    Node:new(0x0004, "Chorus Parameter 1 ", "NEFH_CHO_PRM1", 32768, 12768, 52768, INTEGER4x4, "chorus", 0),
    Node:new(0x0008, "Chorus Parameter 2 ", "NEFH_CHO_PRM2", 32768, 12768, 52768, INTEGER4x4, "chorus", 1),
    Node:new(0x000C, "Chorus Parameter 3 ", "NEFH_CHO_PRM3", 32768, 12768, 52768, INTEGER4x4, "chorus", 2),
    Node:new(0x0010, "Chorus Parameter 4 ", "NEFH_CHO_PRM4", 32768, 12768, 52768, INTEGER4x4, "chorus", 3),
    Node:new(0x0014, "Chorus Parameter 5 ", "NEFH_CHO_PRM5", 32768, 12768, 52768, INTEGER4x4, "chorus", 4),
    Node:new(0x0018, "Chorus Parameter 6 ", "NEFH_CHO_PRM6", 32768, 12768, 52768, INTEGER4x4, "chorus", 5),
    Node:new(0x001C, "Chorus Parameter 7 ", "NEFH_CHO_PRM7", 32768, 12768, 52768, INTEGER4x4, "chorus", 6),
    Node:new(0x0020, "Chorus Parameter 8 ", "NEFH_CHO_PRM8", 32768, 12768, 52768, INTEGER4x4, "chorus", 7),
    Node:new(0x0024, "Chorus Parameter 9 ", "NEFH_CHO_PRM9", 32768, 12768, 52768, INTEGER4x4, "chorus", 8),
    Node:new(0x0028, "Chorus Parameter 10", "NEFH_CHO_PRM10", 32768, 12768, 52768, INTEGER4x4, "chorus", 9),
    Node:new(0x002C, "Chorus Parameter 11", "NEFH_CHO_PRM11", 32768, 12768, 52768, INTEGER4x4, "chorus", 10),
    Node:new(0x0030, "Chorus Parameter 12", "NEFH_CHO_PRM12", 32768, 12768, 52768, INTEGER4x4, "chorus", 11),
    Node:new(0x0034, "Chorus Parameter 13", "NEFH_CHO_PRM13", 32768, 12768, 52768, INTEGER4x4, "chorus", 12),
    Node:new(0x0038, "Chorus Parameter 14", "NEFH_CHO_PRM14", 32768, 12768, 52768, INTEGER4x4, "chorus", 13),
    Node:new(0x003C, "Chorus Parameter 15", "NEFH_CHO_PRM15", 32768, 12768, 52768, INTEGER4x4, "chorus", 14),
    Node:new(0x0040, "Chorus Parameter 16", "NEFH_CHO_PRM16", 32768, 12768, 52768, INTEGER4x4, "chorus", 15),
    Node:new(0x0044, "Chorus Parameter 17", "NEFH_CHO_PRM17", 32768, 12768, 52768, INTEGER4x4, "chorus", 16),
    Node:new(0x0048, "Chorus Parameter 18", "NEFH_CHO_PRM18", 32768, 12768, 52768, INTEGER4x4, "chorus", 17),
    Node:new(0x004C, "Chorus Parameter 19", "NEFH_CHO_PRM19", 32768, 12768, 52768, INTEGER4x4, "chorus", 18),
    Node:new(0x0050, "Chorus Parameter 20", "NEFH_CHO_PRM20", 32768, 12768, 52768, INTEGER4x4, "chorus", 19),
}

local FV = --  Studio Set Common Reverb
{
    Node:new(0x0000, "Reverb Type", "NEFV_REV_TYPE", 1, 0, 6, INTEGER1x4, "reverb"),
    Node:new(0x0001, "Reverb Level", "NEFV_REV_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Reverb Output Assign", "NEFV_REV_OUT_ASGN", 0, 0, 3, INTEGER1x2),
    Node:new(0x0003, "Reverb Parameter 1 ", "NEFV_REV_PRM1", 32768, 12768, 52768, INTEGER4x4, "reverb", 0),
    Node:new(0x0007, "Reverb Parameter 2 ", "NEFV_REV_PRM2", 32768, 12768, 52768, INTEGER4x4, "reverb", 1),
    Node:new(0x000B, "Reverb Parameter 3 ", "NEFV_REV_PRM3", 32768, 12768, 52768, INTEGER4x4, "reverb", 2),
    Node:new(0x000F, "Reverb Parameter 4 ", "NEFV_REV_PRM4", 32768, 12768, 52768, INTEGER4x4, "reverb", 3),
    Node:new(0x0013, "Reverb Parameter 5 ", "NEFV_REV_PRM5", 32768, 12768, 52768, INTEGER4x4, "reverb", 4),
    Node:new(0x0017, "Reverb Parameter 6 ", "NEFV_REV_PRM6", 32768, 12768, 52768, INTEGER4x4, "reverb", 5),
    Node:new(0x001B, "Reverb Parameter 7 ", "NEFV_REV_PRM7", 32768, 12768, 52768, INTEGER4x4, "reverb", 6),
    Node:new(0x001F, "Reverb Parameter 8 ", "NEFV_REV_PRM8", 32768, 12768, 52768, INTEGER4x4, "reverb", 7),
    Node:new(0x0023, "Reverb Parameter 9 ", "NEFV_REV_PRM9", 32768, 12768, 52768, INTEGER4x4, "reverb", 8),
    Node:new(0x0027, "Reverb Parameter 10", "NEFV_REV_PRM10", 32768, 12768, 52768, INTEGER4x4, "reverb", 9),
    Node:new(0x002B, "Reverb Parameter 11", "NEFV_REV_PRM11", 32768, 12768, 52768, INTEGER4x4, "reverb", 10),
    Node:new(0x002F, "Reverb Parameter 12", "NEFV_REV_PRM12", 32768, 12768, 52768, INTEGER4x4, "reverb", 11),
    Node:new(0x0033, "Reverb Parameter 13", "NEFV_REV_PRM13", 32768, 12768, 52768, INTEGER4x4, "reverb", 12),
    Node:new(0x0037, "Reverb Parameter 14", "NEFV_REV_PRM14", 32768, 12768, 52768, INTEGER4x4, "reverb", 13),
    Node:new(0x003B, "Reverb Parameter 15", "NEFV_REV_PRM15", 32768, 12768, 52768, INTEGER4x4, "reverb", 14),
    Node:new(0x003F, "Reverb Parameter 16", "NEFV_REV_PRM16", 32768, 12768, 52768, INTEGER4x4, "reverb", 15),
    Node:new(0x0043, "Reverb Parameter 17", "NEFV_REV_PRM17", 32768, 12768, 52768, INTEGER4x4, "reverb", 16),
    Node:new(0x0047, "Reverb Parameter 18", "NEFV_REV_PRM18", 32768, 12768, 52768, INTEGER4x4, "reverb", 17),
    Node:new(0x004B, "Reverb Parameter 19", "NEFV_REV_PRM19", 32768, 12768, 52768, INTEGER4x4, "reverb", 18),
    Node:new(0x004F, "Reverb Parameter 20", "NEFV_REV_PRM20", 32768, 12768, 52768, INTEGER4x4, "reverb", 19),
    Node:new(0x0053, "Reverb Parameter 21", "NEFV_REV_PRM21", 32768, 12768, 52768, INTEGER4x4, "reverb", 20),
    Node:new(0x0057, "Reverb Parameter 22", "NEFV_REV_PRM22", 32768, 12768, 52768, INTEGER4x4, "reverb", 21),
    Node:new(0x005B, "Reverb Parameter 23", "NEFV_REV_PRM23", 32768, 12768, 52768, INTEGER4x4, "reverb", 22),
    Node:new(0x005F, "Reverb Parameter 24", "NEFV_REV_PRM24", 32768, 12768, 52768, INTEGER4x4, "reverb", 23),
}

local FRSS = --  Studio Set Common RSS
{
    Node:new(0x0000, "Motional Surround Switch", "NEFRSS_RSS_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "Room Type", "NEFRSS_RSS_ROOM_TYPE", 2, 0, 3, INTEGER1x2),
    Node:new(0x0002, "Reverb Level", "NEFRSS_REV_LEVEL", 80, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Reverb Room Size", "NEFRSS_REV_ROOMSIZE", 1, 0, 2, INTEGER1x7),
    Node:new(0x0004, "Reverb Time", "NEFRSS_REV_TIME", 40, 0, 100, INTEGER1x7),
    Node:new(0x0005, "Reverb Density", "NEFRSS_REV_DENSITY", 100, 0, 100, INTEGER1x7),
    Node:new(0x0006, "Reverb HF Damp", "NEFRSS_REV_HFDUMP", 50, 0, 100, INTEGER1x7),
    Node:new(0x0007, "Ext Input X-Position", "NEFRSS_AUX_IN_XPOS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Ext Input Y-Position", "NEFRSS_AUX_IN_YPOS", 74, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Ext Input Width", "NEFRSS_AUX_IN_WIDTH", 10, 0, 32, INTEGER1x6),
    Node:new(0x000A, "Ext Input RevSend Level", "NEFRSS_AUX_IN_RVSEND", 40, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Ext Input Control Channel", "NEFRSS_AUX_IN_CTRL_CH", 15, 0, 16, INTEGER1x5),
    Node:new(0x000C, "Cross Talk Cancel", "NEFRSS_SP4XTALKC", 50, 0, 100, INTEGER1x7),
}

local FMEQ = --  Studio Set Mastering EQ
{
    Node:new(0x0000, "EQ Low Freq", "NEFMEQ_EQ_LOWFREQ", 1, 0, 1, INTEGER1x1),
    Node:new(0x0001, "EQ Low Gain", "NEFMEQ_EQ_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0002, "EQ Mid Freq", "NEFMEQ_EQ_MIDFREQ", 7, 0, 16, INTEGER1x5),
    Node:new(0x0003, "EQ Mid Gain", "NEFMEQ_EQ_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0004, "EQ Mid Q", "NEFMEQ_EQ_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0005, "EQ High Freq", "NEFMEQ_EQ_HIGHFREQ", 1, 0, 2, INTEGER1x2),
    Node:new(0x0006, "EQ High Gain", "NEFMEQ_EQ_HIGHGAIN", 15, 0, 30, INTEGER1x5),
}

local FM = --  Studio Set MIDI
{
    Node:new(0x0000, "Phase Lock", "NEFM_PHASE_LOCK", 0, 0, 1, INTEGER1x1),
}

local FP = --  Studio Set Part
{
    Node:new(0x0000, "Receive Channel", "NEFP_RX_CH", 0, 0, 15, INTEGER1x4),
    Node:new(0x0001, "Part Switch", "NEFP_RX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0002, "Receive Src1", "NEFP_RX_SRC1", 1, 0, 1, INTEGER1x1),
    Node:new(0x0003, "Receive Src2", "NEFP_RX_SRC2", 1, 0, 1, INTEGER1x1),
    Node:new(0x0004, "Receive Src3", "NEFP_RX_SRC3", 1, 0, 1, INTEGER1x1),
    Node:new(0x0005, "Receive Src4", "NEFP_RX_SRC4", 1, 0, 1, INTEGER1x1),
    Node:new(0x0006, "Tone Bank Select MSB (CC# 0)", "NEFP_PAT_BS_MSB", 89, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Tone Bank Select LSB (CC# 32)", "NEFP_PAT_BS_LSB", 64, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Tone Program Number (PC)", "NEFP_PAT_PC", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Part Level (CC# 7)", "NEFP_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x000A, "Part Pan (CC# 10)", "NEFP_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Part Coarse Tune (RPN# 2)", "NEFP_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x000C, "Part Fine Tune (RPN# 1)", "NEFP_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x000D, "Part Mono/Poly (MONO ON/POLY ON)", "NEFP_MONO_POLY", 2, 0, 2, INTEGER1x2),
    Node:new(0x000E, "Part Legato Switch (CC# 68)", "NEFP_LEGATO_SW", 2, 0, 2, INTEGER1x2),
    Node:new(0x000F, "Part Pitch Bend Range (RPN# 0)", "NEFP_BEND_RANGE", 25, 0, 25, INTEGER1x5),
    Node:new(0x0010, "Part Portamento Switch (CC# 65)", "NEFP_PORT_SW", 2, 0, 2, INTEGER1x2),
    Node:new(0x0011, "Part Portamento Time (CC# 5)", "NEFP_PORT_TIME", 128, 0, 128, INTEGER2x4),
    Node:new(0x0013, "Part Cutoff Offset (CC# 74)", "NEFP_CUTOFF_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Part Resonance Offset (CC# 71)", "NEFP_RESO_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Part Attack Time Offset (CC# 73)", "NEFP_ATK_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Part Decay Time Offset (CC# 75)", "NEFP_DCY_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Part Release Time Offset (CC# 72)", "NEFP_REL_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Part Vibrato Rate (CC# 76)", "NEFP_VIB_RATE", 64, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Part Vibrato Depth (CC# 77)", "NEFP_VIB_DEPTH", 64, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Part Vibrato Delay (CC# 78)", "NEFP_VIB_DELAY", 64, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Part Octave Shift", "NEFP_OCTAVE", 64, 61, 67, INTEGER1x3),
    Node:new(0x001C, "Part Velocity Sens Offset", "NEFP_VSENS_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x001D, "Keyboard Range Lower", "NEFP_KRANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Keyboard Range Upper", "NEFP_KRANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Keyboard Fade Width Lower", "NEFP_KFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Keyboard Fade Width Upper", "NEFP_KFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0021, "Velocity Range Lower", "NEFP_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0022, "Velocity Range Upper", "NEFP_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0023, "Velocity Fade Width Lower", "NEFP_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0024, "Velocity Fade Width Upper", "NEFP_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0025, "Mute Switch", "NEFP_MUTE_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0026, "Part Dry Send Level", "NEFP_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0027, "Part Chorus Send Level (CC# 93)", "NEFP_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0028, "Part Reverb Send Level (CC# 91)", "NEFP_REV_SEND", 20, 0, 127, INTEGER1x7),
    Node:new(0x0029, "Part Output Assign", "NEFP_OUT_ASGN", 0, 0, 11, INTEGER1x4),
    Node:new(0x002B, "Part Scale Tune Type", "NEFP_SCALE_TYPE", 1, 0, 8, INTEGER1x7),
    Node:new(0x002C, "Part Scale Tune Key", "NEFP_SCALE_KEY", 0, 0, 11, INTEGER1x7),
    Node:new(0x002D, "Part Scale Tune for C", "NEFP_TUNE_C", 64, 0, 127, INTEGER1x7),
    Node:new(0x002E, "Part Scale Tune for C#", "NEFP_TUNE_CS", 64, 0, 127, INTEGER1x7),
    Node:new(0x002F, "Part Scale Tune for D", "NEFP_TUNE_D", 64, 0, 127, INTEGER1x7),
    Node:new(0x0030, "Part Scale Tune for D#", "NEFP_TUNE_DS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0031, "Part Scale Tune for E", "NEFP_TUNE_E", 64, 0, 127, INTEGER1x7),
    Node:new(0x0032, "Part Scale Tune for F", "NEFP_TUNE_F", 64, 0, 127, INTEGER1x7),
    Node:new(0x0033, "Part Scale Tune for F#", "NEFP_TUNE_FS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0034, "Part Scale Tune for G", "NEFP_TUNE_G", 64, 0, 127, INTEGER1x7),
    Node:new(0x0035, "Part Scale Tune for G#", "NEFP_TUNE_GS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0036, "Part Scale Tune for A", "NEFP_TUNE_A", 64, 0, 127, INTEGER1x7),
    Node:new(0x0037, "Part Scale Tune for A#", "NEFP_TUNE_AS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0038, "Part Scale Tune for B", "NEFP_TUNE_B", 64, 0, 127, INTEGER1x7),
    Node:new(0x0039, "Receive Program Change", "NEFP_RX_PC", 1, 0, 1, INTEGER1x1),
    Node:new(0x003A, "Receive Bank Select", "NEFP_RX_BS", 1, 0, 1, INTEGER1x1),
    Node:new(0x003B, "Receive Pitch Bend", "NEFP_RX_BEND", 1, 0, 1, INTEGER1x1),
    Node:new(0x003C, "Receive Polyphonic Key Pressure", "NEFP_RX_PAFT", 1, 0, 1, INTEGER1x1),
    Node:new(0x003D, "Receive Channel Pressure", "NEFP_RX_CAFT", 1, 0, 1, INTEGER1x1),
    Node:new(0x003E, "Receive Modulation", "NEFP_RX_MOD", 1, 0, 1, INTEGER1x1),
    Node:new(0x003F, "Receive Volume", "NEFP_RX_VOL", 1, 0, 1, INTEGER1x1),
    Node:new(0x0040, "Receive Pan", "NEFP_RX_PAN", 1, 0, 1, INTEGER1x1),
    Node:new(0x0041, "Receive Expression", "NEFP_RX_EXPR", 1, 0, 1, INTEGER1x1),
    Node:new(0x0042, "Receive Hold-1", "NEFP_RX_HOLD", 1, 0, 1, INTEGER1x1),
    Node:new(0x0043, "Velocity Curve Type", "NEFP_VELO_CRV_TYPE", 0, 0, 4, INTEGER1x3),
    Node:new(0x0044, "Motional Surround X-Pos", "NEFP_RSS_X1POS", 64, 0, 127, INTEGER1x7),
    Node:new(0x0046, "Motional Surround Y-Pos", "NEFP_RSS_Y1POS", 74, 0, 127, INTEGER1x7),
    Node:new(0x0048, "Motional Surround Width", "NEFP_RSS_WIDTH", 10, 0, 32, INTEGER1x6),
    Node:new(0x0049, "Motional Surround RevSend Level", "NEFP_RSS_RVSEND", 40, 0, 127, INTEGER1x7),
}

local FPEQ = --  Studio Set Part EQ
{
    Node:new(0x0000, "EQ Switch", "NEFPEQ_EQ_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "EQ Low Freq", "NEFPEQ_EQ_LOWFREQ", 1, 0, 1, INTEGER1x1),
    Node:new(0x0002, "EQ Low Gain", "NEFPEQ_EQ_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0003, "EQ Mid Freq", "NEFPEQ_EQ_MIDFREQ", 7, 0, 16, INTEGER1x5),
    Node:new(0x0004, "EQ Mid Gain", "NEFPEQ_EQ_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0005, "EQ Mid Q", "NEFPEQ_EQ_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0006, "EQ High Freq", "NEFPEQ_EQ_HIGHFREQ", 1, 0, 2, INTEGER1x2),
    Node:new(0x0007, "EQ High Gain", "NEFPEQ_EQ_HIGHGAIN", 15, 0, 30, INTEGER1x5),
}

local PC = --  PCM Tone Common
{
    Node:new(0x0000, "PCM Tone Name", "RFPC_NAME", 0, 32, 127, ByteSize12),
    Node:new(0x000E, "PCM Tone Level", "RFPC_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x000F, "PCM Tone Pan", "RFPC_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0010, "PCM Tone Priority", "RFPC_PRIORITY", 0, 0, 1, INTEGER1x1),
    Node:new(0x0011, "PCM Tone Coarse Tune", "RFPC_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x0012, "PCM Tone Fine Tune", "RFPC_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0013, "Octave Shift", "RFPC_OCTAVE", 64, 61, 67, INTEGER1x3),
    Node:new(0x0014, "Stretch Tune Depth", "RFPC_STRETCH", 0, 0, 3, INTEGER1x2),
    Node:new(0x0015, "Analog Feel", "RFPC_ANALOG_FEEL", 0, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Mono/Poly", "RFPC_MONO_POLY", 1, 0, 1, INTEGER1x1),
    Node:new(0x0017, "Legato Switch", "RFPC_LEGATO_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0018, "Legato Retrigger", "RFPC_LEGATO_RETRIG", 0, 0, 1, INTEGER1x1),
    Node:new(0x0019, "Portamento Switch", "RFPC_PORT_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001A, "Portamento Mode", "RFPC_PORT_MODE", 0, 0, 1, INTEGER1x1),
    Node:new(0x001B, "Portamento Type", "RFPC_PORT_TYPE", 0, 0, 1, INTEGER1x1),
    Node:new(0x001C, "Portamento Start", "RFPC_PORT_START", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Portamento Time", "RFPC_PORT_TIME", 20, 0, 127, INTEGER1x7),
    Node:new(0x0022, "Cutoff Offset", "RFPC_CUTOFF_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x0023, "Resonance Offset", "RFPC_RESO_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x0024, "Attack Time Offset", "RFPC_ATK_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x0025, "Release Time Offset", "RFPC_REL_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x0026, "Velocity Sens Offset", "RFPC_VSENS_OFST", 64, 1, 127, INTEGER1x7),
    Node:new(0x0028, "PMT Control Switch", "RFPC_TMT_CTRL_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0029, "Pitch Bend Range Up", "RFPC_BEND_RANGE_UP", 2, 0, 48, INTEGER1x6),
    Node:new(0x002A, "Pitch Bend Range Down", "RFPC_BEND_RANGE_DW", 2, 0, 48, INTEGER1x6),
    Node:new(0x002B, "Matrix Control 1 Source", "RFPC_CTRL1_SRC", 0, 0, 109, INTEGER1x7),
    Node:new(0x002C, "Matrix Control 1 Destination 1", "RFPC_CTRL1_DST1", 0, 0, 33, INTEGER1x6),
    Node:new(0x002D, "Matrix Control 1 Sens 1", "RFPC_CTRL1_SENS1", 64, 1, 127, INTEGER1x7),
    Node:new(0x002E, "Matrix Control 1 Destination 2", "RFPC_CTRL1_DST2", 0, 0, 33, INTEGER1x6),
    Node:new(0x002F, "Matrix Control 1 Sens 2", "RFPC_CTRL1_SENS2", 64, 1, 127, INTEGER1x7),
    Node:new(0x0030, "Matrix Control 1 Destination 3", "RFPC_CTRL1_DST3", 0, 0, 33, INTEGER1x6),
    Node:new(0x0031, "Matrix Control 1 Sens 3", "RFPC_CTRL1_SENS3", 64, 1, 127, INTEGER1x7),
    Node:new(0x0032, "Matrix Control 1 Destination 4", "RFPC_CTRL1_DST4", 0, 0, 33, INTEGER1x6),
    Node:new(0x0033, "Matrix Control 1 Sens 4", "RFPC_CTRL1_SENS4", 64, 1, 127, INTEGER1x7),
    Node:new(0x0034, "Matrix Control 2 Source", "RFPC_CTRL2_SRC", 0, 0, 109, INTEGER1x7),
    Node:new(0x0035, "Matrix Control 2 Destination 1", "RFPC_CTRL2_DST1", 0, 0, 33, INTEGER1x6),
    Node:new(0x0036, "Matrix Control 2 Sens 1", "RFPC_CTRL2_SENS1", 64, 1, 127, INTEGER1x7),
    Node:new(0x0037, "Matrix Control 2 Destination 2", "RFPC_CTRL2_DST2", 0, 0, 33, INTEGER1x6),
    Node:new(0x0038, "Matrix Control 2 Sens 2", "RFPC_CTRL2_SENS2", 64, 1, 127, INTEGER1x7),
    Node:new(0x0039, "Matrix Control 2 Destination 3", "RFPC_CTRL2_DST3", 0, 0, 33, INTEGER1x6),
    Node:new(0x003A, "Matrix Control 2 Sens 3", "RFPC_CTRL2_SENS3", 64, 1, 127, INTEGER1x7),
    Node:new(0x003B, "Matrix Control 2 Destination 4", "RFPC_CTRL2_DST4", 0, 0, 33, INTEGER1x6),
    Node:new(0x003C, "Matrix Control 2 Sens 4", "RFPC_CTRL2_SENS4", 64, 1, 127, INTEGER1x7),
    Node:new(0x003D, "Matrix Control 3 Source", "RFPC_CTRL3_SRC", 0, 0, 109, INTEGER1x7),
    Node:new(0x003E, "Matrix Control 3 Destination 1", "RFPC_CTRL3_DST1", 0, 0, 33, INTEGER1x6),
    Node:new(0x003F, "Matrix Control 3 Sens 1", "RFPC_CTRL3_SENS1", 64, 1, 127, INTEGER1x7),
    Node:new(0x0040, "Matrix Control 3 Destination 2", "RFPC_CTRL3_DST2", 0, 0, 33, INTEGER1x6),
    Node:new(0x0041, "Matrix Control 3 Sens 2", "RFPC_CTRL3_SENS2", 64, 1, 127, INTEGER1x7),
    Node:new(0x0042, "Matrix Control 3 Destination 3", "RFPC_CTRL3_DST3", 0, 0, 33, INTEGER1x6),
    Node:new(0x0043, "Matrix Control 3 Sens 3", "RFPC_CTRL3_SENS3", 64, 1, 127, INTEGER1x7),
    Node:new(0x0044, "Matrix Control 3 Destination 4", "RFPC_CTRL3_DST4", 0, 0, 33, INTEGER1x6),
    Node:new(0x0045, "Matrix Control 3 Sens 4", "RFPC_CTRL3_SENS4", 64, 1, 127, INTEGER1x7),
    Node:new(0x0046, "Matrix Control 4 Source", "RFPC_CTRL4_SRC", 0, 0, 109, INTEGER1x7),
    Node:new(0x0047, "Matrix Control 4 Destination 1", "RFPC_CTRL4_DST1", 0, 0, 33, INTEGER1x6),
    Node:new(0x0048, "Matrix Control 4 Sens 1", "RFPC_CTRL4_SENS1", 64, 1, 127, INTEGER1x7),
    Node:new(0x0049, "Matrix Control 4 Destination 2", "RFPC_CTRL4_DST2", 0, 0, 33, INTEGER1x6),
    Node:new(0x004A, "Matrix Control 4 Sens 2", "RFPC_CTRL4_SENS2", 64, 1, 127, INTEGER1x7),
    Node:new(0x004B, "Matrix Control 4 Destination 3", "RFPC_CTRL4_DST3", 0, 0, 33, INTEGER1x6),
    Node:new(0x004C, "Matrix Control 4 Sens 3", "RFPC_CTRL4_SENS3", 64, 1, 127, INTEGER1x7),
    Node:new(0x004D, "Matrix Control 4 Destination 4", "RFPC_CTRL4_DST4", 0, 0, 33, INTEGER1x6),
    Node:new(0x004E, "Matrix Control 4 Sens 4", "RFPC_CTRL4_SENS4", 64, 1, 127, INTEGER1x7),
    Node:new(0x004F, "Part Modulation Switch", "RFPC_PART_MOD_SW", 0, 0, 1, INTEGER1x1),
}

local PF = --  PCM Tone Common MFX
{
    Node:new(0x0000, "MFX Type", "RFPF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "RFPF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "RFPF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "RFPF_MFX_REV_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "RFPF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "RFPF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "RFPF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "RFPF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "RFPF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "RFPF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "RFPF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "RFPF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "RFPF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "RFPF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "RFPF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "RFPF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "RFPF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "RFPF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "RFPF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "RFPF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "RFPF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "RFPF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "RFPF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "RFPF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "RFPF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "RFPF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "RFPF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "RFPF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "RFPF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "RFPF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "RFPF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "RFPF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "RFPF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "RFPF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "RFPF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "RFPF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "RFPF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "RFPF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "RFPF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "RFPF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "RFPF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "RFPF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "RFPF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "RFPF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "RFPF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "RFPF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "RFPF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "RFPF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local PX = --  PCM Tone PMT (Partial Mix Table)
{
    Node:new(0x0000, "Structure Type 1 & 2", "RFPX_STRUCT1", 0, 0, 9, INTEGER1x4),
    Node:new(0x0001, "Booster 1 & 2", "RFPX_BOOST1", 0, 0, 3, INTEGER1x2),
    Node:new(0x0002, "Structure Type 3 & 4", "RFPX_STRUCT3", 0, 0, 9, INTEGER1x4),
    Node:new(0x0003, "Booster 3 & 4", "RFPX_BOOST3", 0, 0, 3, INTEGER1x2),
    Node:new(0x0004, "PMT Velocity Control", "RFPX_TMT_VELO_CTRL", 1, 0, 3, INTEGER1x2),
    Node:new(0x0005, "PMT1 Partial Switch", "RFPX_TMT1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0006, "PMT1 Keyboard Range Lower", "RFPX_TMT1_KRANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "PMT1 Keyboard Range Upper", "RFPX_TMT1_KRANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x0008, "PMT1 Keyboard Fade Width Lower", "RFPX_TMT1_KFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "PMT1 Keyboard Fade Width Upper", "RFPX_TMT1_KFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x000A, "PMT1 Velocity Range Lower", "RFPX_TMT1_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x000B, "PMT1 Velocity Range Upper", "RFPX_TMT1_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x000C, "PMT1 Velocity Fade Width Lower", "RFPX_TMT1_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x000D, "PMT1 Velocity Fade Width Upper", "RFPX_TMT1_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x000E, "PMT2 Partial Switch", "RFPX_TMT2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x000F, "PMT2 Keyboard Range Lower", "RFPX_TMT2_KRANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "PMT2 Keyboard Range Upper", "RFPX_TMT2_KRANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x0011, "PMT2 Keyboard Fade Width Lower", "RFPX_TMT2_KFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "PMT2 Keyboard Fade Width Upper", "RFPX_TMT2_KFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "PMT2 Velocity Range Lower", "RFPX_TMT2_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0014, "PMT2 Velocity Range Upper", "RFPX_TMT2_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0015, "PMT2 Velocity Fade Width Lower", "RFPX_TMT2_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0016, "PMT2 Velocity Fade Width Upper", "RFPX_TMT2_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "PMT3 Partial Switch", "RFPX_TMT3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0018, "PMT3 Keyboard Range Lower", "RFPX_TMT3_KRANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0019, "PMT3 Keyboard Range Upper", "RFPX_TMT3_KRANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x001A, "PMT3 Keyboard Fade Width Lower", "RFPX_TMT3_KFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "PMT3 Keyboard Fade Width Upper", "RFPX_TMT3_KFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "PMT3 Velocity Range Lower", "RFPX_TMT3_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x001D, "PMT3 Velocity Range Upper", "RFPX_TMT3_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x001E, "PMT3 Velocity Fade Width Lower", "RFPX_TMT3_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "PMT3 Velocity Fade Width Upper", "RFPX_TMT3_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "PMT4 Partial Switch", "RFPX_TMT4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0021, "PMT4 Keyboard Range Lower", "RFPX_TMT4_KRANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0022, "PMT4 Keyboard Range Upper", "RFPX_TMT4_KRANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x0023, "PMT4 Keyboard Fade Width Lower", "RFPX_TMT4_KFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0024, "PMT4 Keyboard Fade Width Upper", "RFPX_TMT4_KFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0025, "PMT4 Velocity Range Lower", "RFPX_TMT4_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0026, "PMT4 Velocity Range Upper", "RFPX_TMT4_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0027, "PMT4 Velocity Fade Width Lower", "RFPX_TMT4_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0028, "PMT4 Velocity Fade Width Upper", "RFPX_TMT4_VFADE_UP", 0, 0, 127, INTEGER1x7),
}

local PT = --  PCM Tone Partial
{
    Node:new(0x0000, "Partial Level", "RFPT_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0001, "Partial Coarse Tune", "RFPT_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x0002, "Partial Fine Tune", "RFPT_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0003, "Partial Random Pitch Depth", "RFPT_PIT_RND", 0, 0, 30, INTEGER1x5),
    Node:new(0x0004, "Partial Pan", "RFPT_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Partial Pan Keyfollow", "RFPT_PAN_KF", 64, 54, 74, INTEGER1x5),
    Node:new(0x0006, "Partial Random Pan Depth", "RFPT_PAN_RND", 0, 0, 63, INTEGER1x6),
    Node:new(0x0007, "Partial Alternate Pan Depth", "RFPT_PAN_ALT", 64, 1, 127, INTEGER1x7),
    Node:new(0x0008, "Partial Env Mode", "RFPT_ENV_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x0009, "Partial Delay Mode", "RFPT_DELAY_MODE", 0, 0, 3, INTEGER1x2),
    Node:new(0x000A, "Partial Delay Time", "RFPT_DELAY_TIME", 0, 0, 149, INTEGER2x4),
    Node:new(0x000C, "Partial Dry Send Level", "RFPT_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Partial Chorus Send Level", "RFPT_CHO_SEND_A", 127, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Partial Reverb Send Level", "RFPT_REV_SEND_A", 127, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Partial Receive Bender", "RFPT_RX_BEND", 1, 0, 1, INTEGER1x1),
    Node:new(0x0013, "Partial Receive Expression", "RFPT_RX_EXPR", 1, 0, 1, INTEGER1x1),
    Node:new(0x0014, "Partial Receive Hold-1", "RFPT_RX_HOLD", 1, 0, 1, INTEGER1x1),
    Node:new(0x0016, "Partial Redamper Switch", "RFPT_REDAMP_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0017, "Partial Control 1 Switch 1", "RFPT_CTRL1_SW1", 1, 0, 2, INTEGER1x2),
    Node:new(0x0018, "Partial Control 1 Switch 2", "RFPT_CTRL1_SW2", 1, 0, 2, INTEGER1x2),
    Node:new(0x0019, "Partial Control 1 Switch 3", "RFPT_CTRL1_SW3", 1, 0, 2, INTEGER1x2),
    Node:new(0x001A, "Partial Control 1 Switch 4", "RFPT_CTRL1_SW4", 1, 0, 2, INTEGER1x2),
    Node:new(0x001B, "Partial Control 2 Switch 1", "RFPT_CTRL2_SW1", 1, 0, 2, INTEGER1x2),
    Node:new(0x001C, "Partial Control 2 Switch 2", "RFPT_CTRL2_SW2", 1, 0, 2, INTEGER1x2),
    Node:new(0x001D, "Partial Control 2 Switch 3", "RFPT_CTRL2_SW3", 1, 0, 2, INTEGER1x2),
    Node:new(0x001E, "Partial Control 2 Switch 4", "RFPT_CTRL2_SW4", 1, 0, 2, INTEGER1x2),
    Node:new(0x001F, "Partial Control 3 Switch 1", "RFPT_CTRL3_SW1", 1, 0, 2, INTEGER1x2),
    Node:new(0x0020, "Partial Control 3 Switch 2", "RFPT_CTRL3_SW2", 1, 0, 2, INTEGER1x2),
    Node:new(0x0021, "Partial Control 3 Switch 3", "RFPT_CTRL3_SW3", 1, 0, 2, INTEGER1x2),
    Node:new(0x0022, "Partial Control 3 Switch 4", "RFPT_CTRL3_SW4", 1, 0, 2, INTEGER1x2),
    Node:new(0x0023, "Partial Control 4 Switch 1", "RFPT_CTRL4_SW1", 1, 0, 2, INTEGER1x2),
    Node:new(0x0024, "Partial Control 4 Switch 2", "RFPT_CTRL4_SW2", 1, 0, 2, INTEGER1x2),
    Node:new(0x0025, "Partial Control 4 Switch 3", "RFPT_CTRL4_SW3", 1, 0, 2, INTEGER1x2),
    Node:new(0x0026, "Partial Control 4 Switch 4", "RFPT_CTRL4_SW4", 1, 0, 2, INTEGER1x2),
    Node:new(0x0027, "Wave Group Type", "RFPT_WAV_GTYPE", 0, 0, 3, INTEGER1x2),
    Node:new(0x0028, "Wave Group ID", "RFPT_WAV_GID", 1, 0, 16384, INTEGER4x4),
    Node:new(0x002C, "Wave Number L (Mono)", "RFPT_WAV_NUML", 1, 0, 16384, INTEGER4x4),
    Node:new(0x0030, "Wave Number R", "RFPT_WAV_NUMR", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0034, "Wave Gain", "RFPT_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x0035, "Wave FXM Switch", "RFPT_FXM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0036, "Wave FXM Color", "RFPT_FXM_COLOR", 0, 0, 3, INTEGER1x2),
    Node:new(0x0037, "Wave FXM Depth", "RFPT_FXM_DEPTH", 0, 0, 16, INTEGER1x5),
    Node:new(0x0038, "Wave Tempo Sync", "RFPT_TEMPO_SYNC", 0, 0, 1, INTEGER1x1),
    Node:new(0x0039, "Wave Pitch Keyfollow", "RFPT_PIT_KF", 74, 44, 84, INTEGER1x6),
    Node:new(0x003A, "Pitch Env Depth", "RFPT_PENV_DEPTH", 64, 52, 76, INTEGER1x5),
    Node:new(0x003B, "Pitch Env Velocity Sens", "RFPT_PENV_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x003C, "Pitch Env Time 1 Velocity Sens", "RFPT_PENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x003D, "Pitch Env Time 4 Velocity Sens", "RFPT_PENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x003E, "Pitch Env Time Keyfollow", "RFPT_PENV_TKF", 64, 54, 74, INTEGER1x5),
    Node:new(0x003F, "Pitch Env Time 1", "RFPT_PENV_T1", 40, 0, 127, INTEGER1x7),
    Node:new(0x0040, "Pitch Env Time 2", "RFPT_PENV_T2", 80, 0, 127, INTEGER1x7),
    Node:new(0x0041, "Pitch Env Time 3", "RFPT_PENV_T3", 40, 0, 127, INTEGER1x7),
    Node:new(0x0042, "Pitch Env Time 4", "RFPT_PENV_T4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0043, "Pitch Env Level 0", "RFPT_PENV_L0", 64, 1, 127, INTEGER1x7),
    Node:new(0x0044, "Pitch Env Level 1", "RFPT_PENV_L1", 34, 1, 127, INTEGER1x7),
    Node:new(0x0045, "Pitch Env Level 2", "RFPT_PENV_L2", 94, 1, 127, INTEGER1x7),
    Node:new(0x0046, "Pitch Env Level 3", "RFPT_PENV_L3", 64, 1, 127, INTEGER1x7),
    Node:new(0x0047, "Pitch Env Level 4", "RFPT_PENV_L4", 64, 1, 127, INTEGER1x7),
    Node:new(0x0048, "TVF Filter Type", "RFPT_FILTER_TYPE", 1, 0, 6, INTEGER1x3),
    Node:new(0x0049, "TVF Cutoff Frequency", "RFPT_CUTOFF", 127, 0, 127, INTEGER1x7),
    Node:new(0x004A, "TVF Cutoff Keyfollow", "RFPT_CUTOFF_KF", 64, 44, 84, INTEGER1x6),
    Node:new(0x004B, "TVF Cutoff Velocity Curve", "RFPT_CUTOFF_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x004C, "TVF Cutoff Velocity Sens", "RFPT_CUTOFF_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x004D, "TVF Resonance", "RFPT_RESO", 0, 0, 127, INTEGER1x7),
    Node:new(0x004E, "TVF Resonance Velocity Sens", "RFPT_RESO_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x004F, "TVF Env Depth", "RFPT_FENV_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0050, "TVF Env Velocity Curve", "RFPT_FENV_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x0051, "TVF Env Velocity Sens", "RFPT_FENV_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0052, "TVF Env Time 1 Velocity Sens", "RFPT_FENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0053, "TVF Env Time 4 Velocity Sens", "RFPT_FENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0054, "TVF Env Time Keyfollow", "RFPT_FENV_TKF", 64, 54, 74, INTEGER1x5),
    Node:new(0x0055, "TVF Env Time 1", "RFPT_FENV_T1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0056, "TVF Env Time 2", "RFPT_FENV_T2", 10, 0, 127, INTEGER1x7),
    Node:new(0x0057, "TVF Env Time 3", "RFPT_FENV_T3", 10, 0, 127, INTEGER1x7),
    Node:new(0x0058, "TVF Env Time 4", "RFPT_FENV_T4", 64, 0, 127, INTEGER1x7),
    Node:new(0x0059, "TVF Env Level 0", "RFPT_FENV_L0", 0, 0, 127, INTEGER1x7),
    Node:new(0x005A, "TVF Env Level 1", "RFPT_FENV_L1", 127, 0, 127, INTEGER1x7),
    Node:new(0x005B, "TVF Env Level 2", "RFPT_FENV_L2", 127, 0, 127, INTEGER1x7),
    Node:new(0x005C, "TVF Env Level 3", "RFPT_FENV_L3", 127, 0, 127, INTEGER1x7),
    Node:new(0x005D, "TVF Env Level 4", "RFPT_FENV_L4", 0, 0, 127, INTEGER1x7),
    Node:new(0x005E, "Bias Level", "RFPT_BIAS_LEVEL", 64, 54, 74, INTEGER1x5),
    Node:new(0x005F, "Bias Position", "RFPT_BIAS_POS", 60, 0, 127, INTEGER1x7),
    Node:new(0x0060, "Bias Direction", "RFPT_BIAS_DIR", 3, 0, 3, INTEGER1x2),
    Node:new(0x0061, "TVA Level Velocity Curve", "RFPT_LEVEL_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x0062, "TVA Level Velocity Sens", "RFPT_LEVEL_VSENS", 96, 1, 127, INTEGER1x7),
    Node:new(0x0063, "TVA Env Time 1 Velocity Sens", "RFPT_AENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0064, "TVA Env Time 4 Velocity Sens", "RFPT_AENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0065, "TVA Env Time Keyfollow", "RFPT_AENV_TKF", 64, 54, 74, INTEGER1x5),
    Node:new(0x0066, "TVA Env Time 1", "RFPT_AENV_T1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0067, "TVA Env Time 2", "RFPT_AENV_T2", 10, 0, 127, INTEGER1x7),
    Node:new(0x0068, "TVA Env Time 3", "RFPT_AENV_T3", 10, 0, 127, INTEGER1x7),
    Node:new(0x0069, "TVA Env Time 4", "RFPT_AENV_T4", 10, 0, 127, INTEGER1x7),
    Node:new(0x006A, "TVA Env Level 1", "RFPT_AENV_L1", 127, 0, 127, INTEGER1x7),
    Node:new(0x006B, "TVA Env Level 2", "RFPT_AENV_L2", 127, 0, 127, INTEGER1x7),
    Node:new(0x006C, "TVA Env Level 3", "RFPT_AENV_L3", 127, 0, 127, INTEGER1x7),
    Node:new(0x006D, "LFO1 Waveform", "RFPT_LFO1_FORM", 1, 0, 12, INTEGER1x4),
    Node:new(0x006E, "LFO1 Rate", "RFPT_LFO1_RATE", 92, 0, 149, INTEGER2x4),
    Node:new(0x0070, "LFO1 Offset", "RFPT_LFO1_OFST", 2, 0, 4, INTEGER1x3),
    Node:new(0x0071, "LFO1 Rate Detune", "RFPT_LFO1_RATE_DETN", 0, 0, 127, INTEGER1x7),
    Node:new(0x0072, "LFO1 Delay Time", "RFPT_LFO1_DELAY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0073, "LFO1 Delay Time Keyfollow", "RFPT_LFO1_DELAY_KF", 64, 54, 74, INTEGER1x5),
    Node:new(0x0074, "LFO1 Fade Mode", "RFPT_LFO1_FADE_MODE", 0, 0, 3, INTEGER1x2),
    Node:new(0x0075, "LFO1 Fade Time", "RFPT_LFO1_FADE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0076, "LFO1 Key Trigger", "RFPT_LFO1_KEY_TRIG", 0, 0, 1, INTEGER1x1),
    Node:new(0x0077, "LFO1 Pitch Depth", "RFPT_LFO1_PIT_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0078, "LFO1 TVF Depth", "RFPT_LFO1_TVF_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0079, "LFO1 TVA Depth", "RFPT_LFO1_TVA_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x007A, "LFO1 Pan Depth", "RFPT_LFO1_PAN_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x007B, "LFO2 Waveform", "RFPT_LFO2_FORM", 1, 0, 12, INTEGER1x4),
    Node:new(0x007C, "LFO2 Rate", "RFPT_LFO2_RATE", 92, 0, 149, INTEGER2x4),
    Node:new(0x007E, "LFO2 Offset", "RFPT_LFO2_OFST", 2, 0, 4, INTEGER1x3),
    Node:new(0x007F, "LFO2 Rate Detune", "RFPT_LFO2_RATE_DETN", 0, 0, 127, INTEGER1x7),
    Node:new(0x0100, "LFO2 Delay Time", "RFPT_LFO2_DELAY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0101, "LFO2 Delay Time Keyfollow", "RFPT_LFO2_DELAY_KF", 64, 54, 74, INTEGER1x5),
    Node:new(0x0102, "LFO2 Fade Mode", "RFPT_LFO2_FADE_MODE", 0, 0, 3, INTEGER1x2),
    Node:new(0x0103, "LFO2 Fade Time", "RFPT_LFO2_FADE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0104, "LFO2 Key Trigger", "RFPT_LFO2_KEY_TRIG", 0, 0, 1, INTEGER1x1),
    Node:new(0x0105, "LFO2 Pitch Depth", "RFPT_LFO2_PIT_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0106, "LFO2 TVF Depth", "RFPT_LFO2_TVF_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0107, "LFO2 TVA Depth", "RFPT_LFO2_TVA_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0108, "LFO2 Pan Depth", "RFPT_LFO2_PAN_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0109, "LFO Step Type", "RFPT_LFO_STEP_TYPE", 0, 0, 1, INTEGER1x4),
    Node:new(0x010A, "LFO Step1", "RFPT_LFO_STEP1", 64, 28, 100, INTEGER1x7),
    Node:new(0x010B, "LFO Step2", "RFPT_LFO_STEP2", 64, 28, 100, INTEGER1x7),
    Node:new(0x010C, "LFO Step3", "RFPT_LFO_STEP3", 64, 28, 100, INTEGER1x7),
    Node:new(0x010D, "LFO Step4", "RFPT_LFO_STEP4", 64, 28, 100, INTEGER1x7),
    Node:new(0x010E, "LFO Step5", "RFPT_LFO_STEP5", 64, 28, 100, INTEGER1x7),
    Node:new(0x010F, "LFO Step6", "RFPT_LFO_STEP6", 64, 28, 100, INTEGER1x7),
    Node:new(0x0110, "LFO Step7", "RFPT_LFO_STEP7", 64, 28, 100, INTEGER1x7),
    Node:new(0x0111, "LFO Step8", "RFPT_LFO_STEP8", 64, 28, 100, INTEGER1x7),
    Node:new(0x0112, "LFO Step9", "RFPT_LFO_STEP9", 64, 28, 100, INTEGER1x7),
    Node:new(0x0113, "LFO Step10", "RFPT_LFO_STEP10", 64, 28, 100, INTEGER1x7),
    Node:new(0x0114, "LFO Step11", "RFPT_LFO_STEP11", 64, 28, 100, INTEGER1x7),
    Node:new(0x0115, "LFO Step12", "RFPT_LFO_STEP12", 64, 28, 100, INTEGER1x7),
    Node:new(0x0116, "LFO Step13", "RFPT_LFO_STEP13", 64, 28, 100, INTEGER1x7),
    Node:new(0x0117, "LFO Step14", "RFPT_LFO_STEP14", 64, 28, 100, INTEGER1x7),
    Node:new(0x0118, "LFO Step15", "RFPT_LFO_STEP15", 64, 28, 100, INTEGER1x7),
    Node:new(0x0119, "LFO Step16", "RFPT_LFO_STEP16", 64, 28, 100, INTEGER1x7),
}

local PLGT4 = --  PCM Tone Controller
{
    Node:new(0x0000, "Beam Switch", "RFPLGT4_BEAM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "Beam Assign", "RFPLGT4_BEAM_ASGN", 2, 0, 109, INTEGER1x7),
    Node:new(0x0002, "Beam Polarity", "RFPLGT4_BEAM_POL", 0, 0, 1, INTEGER1x1),
    Node:new(0x0003, "Beam Range Lower", "RFPLGT4_BEAM_RANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Beam Range Upper", "RFPLGT4_BEAM_RANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Knob 1 Assign", "RFPLGT4_KNOB1_ASGN", 0, 0, 102, INTEGER1x7),
    Node:new(0x0006, "Knob 2 Assign", "RFPLGT4_KNOB2_ASGN", 0, 0, 102, INTEGER1x7),
    Node:new(0x0007, "Knob 3 Assign", "RFPLGT4_KNOB3_ASGN", 0, 0, 102, INTEGER1x7),
    Node:new(0x0008, "Knob 4 Assign", "RFPLGT4_KNOB4_ASGN", 0, 0, 102, INTEGER1x7),
    Node:new(0x0009, "Switch 1 Assign", "RFPLGT4_SW1_ASGN", 0, 0, 105, INTEGER1x7),
    Node:new(0x000A, "Switch 1 Assign Mode", "RFPLGT4_SW1_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000B, "Switch 2 Assign", "RFPLGT4_SW2_ASGN", 0, 0, 105, INTEGER1x7),
    Node:new(0x000C, "Switch 2 Assign Mode", "RFPLGT4_SW2_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000D, "Switch 3 Assign", "RFPLGT4_SW3_ASGN", 0, 0, 105, INTEGER1x7),
    Node:new(0x000E, "Switch 3 Assign Mode", "RFPLGT4_SW3_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000F, "Switch 4 Assign", "RFPLGT4_SW4_ASGN", 0, 0, 105, INTEGER1x7),
    Node:new(0x0010, "Switch 4 Assign Mode", "RFPLGT4_SW4_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x0011, "Arpeggio Switch", "RFPLGT4_ARP_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0012, "Arpeggio Hold", "RFPLGT4_ARP_HOLD", 0, 0, 1, INTEGER1x1),
    Node:new(0x0013, "Arpeggio Style", "RFPLGT4_ARP_STYLE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Arpeggio Variation", "RFPLGT4_ARP_VARIAT", 0, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Arpeggio Motif", "RFPLGT4_ARP_MOTIF", 0, 0, 9, INTEGER1x7),
    Node:new(0x0016, "Arpeggio Accent Rate", "RFPLGT4_ARP_ACCT_RATE", 100, 0, 100, INTEGER1x7),
    Node:new(0x0017, "Arpeggio Shuffle Rate", "RFPLGT4_ARP_SHFL_RATE", 50, 0, 100, INTEGER1x7),
    Node:new(0x0018, "Arpeggio Shuffle Resolution", "RFPLGT4_ARP_SHFL_RESO", 0, 0, 1, INTEGER1x1),
    Node:new(0x0019, "Arpeggio Keyboard Velocity", "RFPLGT4_ARP_VELO", 0, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Arpeggio Octave Range", "RFPLGT4_ARP_RANGE", 64, 61, 67, INTEGER1x3),
    Node:new(0x001B, "Arpeggio Key Trigger", "RFPLGT4_ARP_KEY_TRIG", 0, 0, 1, INTEGER1x1),
}

local PC2 = --  PCM Tone Common 2
{
    Node:new(0x0000, "(reserve)", "RESERVE_DUMMY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Tone Category", "RFPC2_CATE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Phrase Octave Shift", "RFPC2_PHRASE_OCT", 64, 61, 67, INTEGER1x3),
    Node:new(0x0014, "Keyword Flag 1 ", "RFPC2_KEYWORD1", 0, 0, 1, INTEGER1x1),
    Node:new(0x0015, "Keyword Flag 2 ", "RFPC2_KEYWORD2", 0, 0, 1, INTEGER1x1),
    Node:new(0x0016, "Keyword Flag 3 ", "RFPC2_KEYWORD3", 0, 0, 1, INTEGER1x1),
    Node:new(0x0017, "Keyword Flag 4 ", "RFPC2_KEYWORD4", 0, 0, 1, INTEGER1x1),
    Node:new(0x0018, "Keyword Flag 5 ", "RFPC2_KEYWORD5", 0, 0, 1, INTEGER1x1),
    Node:new(0x0019, "Keyword Flag 6 ", "RFPC2_KEYWORD6", 0, 0, 1, INTEGER1x1),
    Node:new(0x001A, "Keyword Flag 7 ", "RFPC2_KEYWORD7", 0, 0, 1, INTEGER1x1),
    Node:new(0x001B, "Keyword Flag 8 ", "RFPC2_KEYWORD8", 0, 0, 1, INTEGER1x1),
    Node:new(0x001C, "Keyword Flag 9 ", "RFPC2_KEYWORD9", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Keyword Flag 10", "RFPC2_KEYWORD10", 0, 0, 1, INTEGER1x1),
    Node:new(0x001E, "Keyword Flag 11", "RFPC2_KEYWORD11", 0, 0, 1, INTEGER1x1),
    Node:new(0x001F, "Keyword Flag 12", "RFPC2_KEYWORD12", 0, 0, 1, INTEGER1x1),
    Node:new(0x0020, "Keyword Flag 13", "RFPC2_KEYWORD13", 0, 0, 1, INTEGER1x1),
    Node:new(0x0021, "Keyword Flag 14", "RFPC2_KEYWORD14", 0, 0, 1, INTEGER1x1),
    Node:new(0x0022, "Keyword Flag 15", "RFPC2_KEYWORD15", 0, 0, 1, INTEGER1x1),
    Node:new(0x0023, "Keyword Flag 16", "RFPC2_KEYWORD16", 0, 0, 1, INTEGER1x1),
    Node:new(0x0024, "Keyword Flag 17", "RFPC2_KEYWORD17", 0, 0, 1, INTEGER1x1),
    Node:new(0x0025, "Keyword Flag 18", "RFPC2_KEYWORD18", 0, 0, 1, INTEGER1x1),
    Node:new(0x0026, "Keyword Flag 19", "RFPC2_KEYWORD19", 0, 0, 1, INTEGER1x1),
    Node:new(0x0027, "Keyword Flag 20", "RFPC2_KEYWORD20", 0, 0, 1, INTEGER1x1),
    Node:new(0x0028, "Keyword Flag 21", "RFPC2_KEYWORD21", 0, 0, 1, INTEGER1x1),
    Node:new(0x0029, "Keyword Flag 22", "RFPC2_KEYWORD22", 0, 0, 1, INTEGER1x1),
    Node:new(0x002A, "Keyword Flag 23", "RFPC2_KEYWORD23", 0, 0, 1, INTEGER1x1),
    Node:new(0x002B, "Keyword Flag 24", "RFPC2_KEYWORD24", 0, 0, 1, INTEGER1x1),
    Node:new(0x002C, "Keyword Flag 25", "RFPC2_KEYWORD25", 0, 0, 1, INTEGER1x1),
    Node:new(0x002D, "Keyword Flag 26", "RFPC2_KEYWORD26", 0, 0, 1, INTEGER1x1),
    Node:new(0x002E, "Keyword Flag 27", "RFPC2_KEYWORD27", 0, 0, 1, INTEGER1x1),
    Node:new(0x002F, "Keyword Flag 28", "RFPC2_KEYWORD28", 0, 0, 1, INTEGER1x1),
    Node:new(0x0030, "Keyword Flag 29", "RFPC2_KEYWORD29", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "Keyword Flag 30", "RFPC2_KEYWORD30", 0, 0, 1, INTEGER1x1),
    Node:new(0x0032, "Keyword Flag 31", "RFPC2_KEYWORD31", 0, 0, 1, INTEGER1x1),
    Node:new(0x0033, "TFX Switch", "RFPC2_TFX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0034, "Meta 1 ", "RFPC2_META1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0035, "Meta 2 ", "RFPC2_META2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0036, "Meta 3 ", "RFPC2_META3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0037, "Meta 4 ", "RFPC2_META4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0038, "Phrase Number", "RFPC2_PHRASE", 0, 0, 65535, INTEGER4x4),
}

local PTM = --  PCM Tone Modify
{
    Node:new(0x0001, "Modify Parameter 1 ", "RFPTM_MOD_PRM1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Modify Parameter 2 ", "RFPTM_MOD_PRM2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Modify Parameter 3 ", "RFPTM_MOD_PRM3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Modify Parameter 4 ", "RFPTM_MOD_PRM4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Modify Parameter 5 ", "RFPTM_MOD_PRM5", 0, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Modify Parameter 6 ", "RFPTM_MOD_PRM6", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Modify Parameter 7 ", "RFPTM_MOD_PRM7", 0, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Modify Parameter 8 ", "RFPTM_MOD_PRM8", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Modify Parameter 9 ", "RFPTM_MOD_PRM9", 0, 0, 127, INTEGER1x7),
    Node:new(0x000A, "Modify Parameter 10", "RFPTM_MOD_PRM10", 0, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Modify Parameter 11", "RFPTM_MOD_PRM11", 0, 0, 127, INTEGER1x7),
    Node:new(0x000C, "Modify Parameter 12", "RFPTM_MOD_PRM12", 0, 0, 127, INTEGER1x7),
    Node:new(0x000D, "Modify Parameter 13", "RFPTM_MOD_PRM13", 0, 0, 127, INTEGER1x7),
    Node:new(0x000E, "Modify Parameter 14", "RFPTM_MOD_PRM14", 0, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Modify Parameter 15", "RFPTM_MOD_PRM15", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Modify Parameter 16", "RFPTM_MOD_PRM16", 0, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Modify Parameter 17", "RFPTM_MOD_PRM17", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Modify Parameter 18", "RFPTM_MOD_PRM18", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Modify Parameter 19", "RFPTM_MOD_PRM19", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Modify Parameter 20", "RFPTM_MOD_PRM20", 0, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Modify Parameter 21", "RFPTM_MOD_PRM21", 0, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Modify Parameter 22", "RFPTM_MOD_PRM22", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Modify Parameter 23", "RFPTM_MOD_PRM23", 0, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Modify Parameter 24", "RFPTM_MOD_PRM24", 0, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Modify Parameter 25", "RFPTM_MOD_PRM25", 0, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Modify Parameter 26", "RFPTM_MOD_PRM26", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Modify Parameter 27", "RFPTM_MOD_PRM27", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Modify Parameter 28", "RFPTM_MOD_PRM28", 0, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Modify Parameter 29", "RFPTM_MOD_PRM29", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Modify Parameter 30", "RFPTM_MOD_PRM30", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Modify Parameter 31", "RFPTM_MOD_PRM31", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Modify Parameter 32", "RFPTM_MOD_PRM32", 0, 0, 127, INTEGER1x7),
}

local RC = --  Rhythm Set Common
{
    Node:new(0x0000, "Rhythm Name", "RFRC_NAME", 0, 32, 127, ByteSize12),
    Node:new(0x000C, "Rhythm Level", "RFRC_LEVEL", 127, 0, 127, INTEGER1x7),
}

local RF = --  Rhythm Set Common MFX
{
    Node:new(0x0000, "MFX Type", "RFRF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "RFRF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "RFRF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "RFRF_MFX_REV_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "RFRF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "RFRF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "RFRF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "RFRF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "RFRF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "RFRF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "RFRF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "RFRF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "RFRF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "RFRF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "RFRF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "RFRF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "RFRF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "RFRF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "RFRF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "RFRF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "RFRF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "RFRF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "RFRF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "RFRF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "RFRF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "RFRF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "RFRF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "RFRF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "RFRF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "RFRF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "RFRF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "RFRF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "RFRF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "RFRF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "RFRF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "RFRF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "RFRF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "RFRF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "RFRF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "RFRF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "RFRF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "RFRF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "RFRF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "RFRF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "RFRF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "RFRF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "RFRF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "RFRF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local RCQ = --  Rhythm Set Common Comp/EQ
{
    Node:new(0x0000, "Comp1 Switch", "RFRCQ_COMP1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "Comp1 Attack Time", "RFRCQ_COMP1_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x0002, "Comp1 Release Time", "RFRCQ_COMP1_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x0003, "Comp1 Threshold", "RFRCQ_COMP1_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Comp1 Ratio", "RFRCQ_COMP1_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x0005, "Comp1 Output Gain", "RFRCQ_COMP1_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x0006, "EQ1 Switch", "RFRCQ_EQ1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0007, "EQ1 Low Freq", "RFRCQ_EQ1_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0008, "EQ1 Low Gain", "RFRCQ_EQ1_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0009, "EQ1 Mid Freq", "RFRCQ_EQ1_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x000A, "EQ1 Mid Gain", "RFRCQ_EQ1_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x000B, "EQ1 Mid Q", "RFRCQ_EQ1_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x000C, "EQ1 High Freq", "RFRCQ_EQ1_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x000D, "EQ1 High Gain", "RFRCQ_EQ1_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x000E, "Comp2 Switch", "RFRCQ_COMP2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x000F, "Comp2 Attack Time", "RFRCQ_COMP2_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x0010, "Comp2 Release Time", "RFRCQ_COMP2_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x0011, "Comp2 Threshold", "RFRCQ_COMP2_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Comp2 Ratio", "RFRCQ_COMP2_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x0013, "Comp2 Output Gain", "RFRCQ_COMP2_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x0014, "EQ2 Switch", "RFRCQ_EQ2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0015, "EQ2 Low Freq", "RFRCQ_EQ2_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0016, "EQ2 Low Gain", "RFRCQ_EQ2_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0017, "EQ2 Mid Freq", "RFRCQ_EQ2_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0018, "EQ2 Mid Gain", "RFRCQ_EQ2_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0019, "EQ2 Mid Q", "RFRCQ_EQ2_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x001A, "EQ2 High Freq", "RFRCQ_EQ2_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x001B, "EQ2 High Gain", "RFRCQ_EQ2_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x001C, "Comp3 Switch", "RFRCQ_COMP3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Comp3 Attack Time", "RFRCQ_COMP3_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x001E, "Comp3 Release Time", "RFRCQ_COMP3_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x001F, "Comp3 Threshold", "RFRCQ_COMP3_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Comp3 Ratio", "RFRCQ_COMP3_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x0021, "Comp3 Output Gain", "RFRCQ_COMP3_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x0022, "EQ3 Switch", "RFRCQ_EQ3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0023, "EQ3 Low Freq", "RFRCQ_EQ3_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0024, "EQ3 Low Gain", "RFRCQ_EQ3_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0025, "EQ3 Mid Freq", "RFRCQ_EQ3_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0026, "EQ3 Mid Gain", "RFRCQ_EQ3_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0027, "EQ3 Mid Q", "RFRCQ_EQ3_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0028, "EQ3 High Freq", "RFRCQ_EQ3_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0029, "EQ3 High Gain", "RFRCQ_EQ3_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x002A, "Comp4 Switch", "RFRCQ_COMP4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x002B, "Comp4 Attack Time", "RFRCQ_COMP4_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x002C, "Comp4 Release Time", "RFRCQ_COMP4_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x002D, "Comp4 Threshold", "RFRCQ_COMP4_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x002E, "Comp4 Ratio", "RFRCQ_COMP4_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x002F, "Comp4 Output Gain", "RFRCQ_COMP4_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x0030, "EQ4 Switch", "RFRCQ_EQ4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "EQ4 Low Freq", "RFRCQ_EQ4_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0032, "EQ4 Low Gain", "RFRCQ_EQ4_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0033, "EQ4 Mid Freq", "RFRCQ_EQ4_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0034, "EQ4 Mid Gain", "RFRCQ_EQ4_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0035, "EQ4 Mid Q", "RFRCQ_EQ4_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0036, "EQ4 High Freq", "RFRCQ_EQ4_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0037, "EQ4 High Gain", "RFRCQ_EQ4_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0038, "Comp5 Switch", "RFRCQ_COMP5_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0039, "Comp5 Attack Time", "RFRCQ_COMP5_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x003A, "Comp5 Release Time", "RFRCQ_COMP5_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x003B, "Comp5 Threshold", "RFRCQ_COMP5_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x003C, "Comp5 Ratio", "RFRCQ_COMP5_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x003D, "Comp5 Output Gain", "RFRCQ_COMP5_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x003E, "EQ5 Switch", "RFRCQ_EQ5_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x003F, "EQ5 Low Freq", "RFRCQ_EQ5_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0040, "EQ5 Low Gain", "RFRCQ_EQ5_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0041, "EQ5 Mid Freq", "RFRCQ_EQ5_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0042, "EQ5 Mid Gain", "RFRCQ_EQ5_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0043, "EQ5 Mid Q", "RFRCQ_EQ5_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0044, "EQ5 High Freq", "RFRCQ_EQ5_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0045, "EQ5 High Gain", "RFRCQ_EQ5_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0046, "Comp6 Switch", "RFRCQ_COMP6_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0047, "Comp6 Attack Time", "RFRCQ_COMP6_ATTACK", 9, 0, 31, INTEGER1x5),
    Node:new(0x0048, "Comp6 Release Time", "RFRCQ_COMP6_RELEASE", 9, 0, 23, INTEGER1x5),
    Node:new(0x0049, "Comp6 Threshold", "RFRCQ_COMP6_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x004A, "Comp6 Ratio", "RFRCQ_COMP6_RATIO", 3, 0, 19, INTEGER1x5),
    Node:new(0x004B, "Comp6 Output Gain", "RFRCQ_COMP6_POSTGAIN", 6, 0, 24, INTEGER1x5),
    Node:new(0x004C, "EQ6 Switch", "RFRCQ_EQ6_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x004D, "EQ6 Low Freq", "RFRCQ_EQ6_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x004E, "EQ6 Low Gain", "RFRCQ_EQ6_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x004F, "EQ6 Mid Freq", "RFRCQ_EQ6_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0050, "EQ6 Mid Gain", "RFRCQ_EQ6_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0051, "EQ6 Mid Q", "RFRCQ_EQ6_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0052, "EQ6 High Freq", "RFRCQ_EQ6_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0053, "EQ6 High Gain", "RFRCQ_EQ6_HIGHGAIN", 15, 0, 30, INTEGER1x5),
}

local RT = --  Rhythm Set Partial
{
    Node:new(0x0000, "Partial Name", "RFRT_NAME", 0, 32, 127, ByteSize12),
    Node:new(0x000C, "Assign Type", "RFRT_ASGN_TYPE", 0, 0, 1, INTEGER1x1),
    Node:new(0x000D, "Mute Group", "RFRT_MUTE_GRP", 0, 0, 31, INTEGER1x5),
    Node:new(0x000E, "Partial Level", "RFRT_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Partial Coarse Tune", "RFRT_SRC_KEY", 60, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Partial Fine Tune", "RFRT_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0011, "Partial Random Pitch Depth", "RFRT_PIT_RND", 0, 0, 30, INTEGER1x5),
    Node:new(0x0012, "Partial Pan", "RFRT_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Partial Random Pan Depth", "RFRT_PAN_RND", 0, 0, 63, INTEGER1x6),
    Node:new(0x0014, "Partial Alternate Pan Depth", "RFRT_PAN_ALT", 64, 1, 127, INTEGER1x7),
    Node:new(0x0015, "Partial Env Mode", "RFRT_ENV_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x0016, "Partial Dry Send Level", "RFRT_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Partial Chorus Send Level", "RFRT_CHO_SEND_A", 0, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Partial Reverb Send Level", "RFRT_REV_SEND_A", 64, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Partial Output Assign", "RFRT_OUT_ASGN", 0, 0, 6, INTEGER1x4),
    Node:new(0x001C, "Partial Pitch Bend Range", "RFRT_BEND_RANGE", 2, 0, 48, INTEGER1x6),
    Node:new(0x001D, "Partial Receive Expression", "RFRT_RX_EXPR", 1, 0, 1, INTEGER1x1),
    Node:new(0x001E, "Partial Receive Hold-1", "RFRT_RX_HOLD", 1, 0, 1, INTEGER1x1),
    Node:new(0x0020, "WMT Velocity Control", "RFRT_WMT_VELO_CTRL", 1, 0, 2, INTEGER1x2),
    Node:new(0x0021, "WMT1 Wave Switch", "RFRT_WMT1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0022, "WMT1 Wave Group Type", "RFRT_WMT1_WAV_GTYPE", 0, 0, 3, INTEGER1x2),
    Node:new(0x0023, "WMT1 Wave Group ID", "RFRT_WMT1_WAV_GID", 1, 0, 16384, INTEGER4x4),
    Node:new(0x0027, "WMT1 Wave Number L (Mono)", "RFRT_WMT1_WAV_NUML", 0, 0, 16384, INTEGER4x4),
    Node:new(0x002B, "WMT1 Wave Number R", "RFRT_WMT1_WAV_NUMR", 0, 0, 16384, INTEGER4x4),
    Node:new(0x002F, "WMT1 Wave Gain", "RFRT_WMT1_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x0030, "WMT1 Wave FXM Switch", "RFRT_WMT1_FXM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "WMT1 Wave FXM Color", "RFRT_WMT1_FXM_COLOR", 0, 0, 3, INTEGER1x2),
    Node:new(0x0032, "WMT1 Wave FXM Depth", "RFRT_WMT1_FXM_DEPTH", 0, 0, 16, INTEGER1x5),
    Node:new(0x0033, "WMT1 Wave Tempo Sync", "RFRT_WMT1_TEMPO_SYNC", 0, 0, 1, INTEGER1x1),
    Node:new(0x0034, "WMT1 Wave Coarse Tune", "RFRT_WMT1_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x0035, "WMT1 Wave Fine Tune", "RFRT_WMT1_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0036, "WMT1 Wave Pan", "RFRT_WMT1_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0037, "WMT1 Wave Random Pan Switch", "RFRT_WMT1_PAN_RND", 1, 0, 1, INTEGER1x1),
    Node:new(0x0038, "WMT1 Wave Alternate Pan Switch", "RFRT_WMT1_PAN_ALT", 1, 0, 2, INTEGER1x2),
    Node:new(0x0039, "WMT1 Wave Level", "RFRT_WMT1_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x003A, "WMT1 Velocity Range Lower", "RFRT_WMT1_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x003B, "WMT1 Velocity Range Upper", "RFRT_WMT1_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x003C, "WMT1 Velocity Fade Width Lower", "RFRT_WMT1_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x003D, "WMT1 Velocity Fade Width Upper", "RFRT_WMT1_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x003E, "WMT2 Wave Switch", "RFRT_WMT2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x003F, "WMT2 Wave Group Type", "RFRT_WMT2_WAV_GTYPE", 0, 0, 3, INTEGER1x2),
    Node:new(0x0040, "WMT2 Wave Group ID", "RFRT_WMT2_WAV_GID", 1, 0, 16384, INTEGER4x4),
    Node:new(0x0044, "WMT2 Wave Number L (Mono)", "RFRT_WMT2_WAV_NUML", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0048, "WMT2 Wave Number R", "RFRT_WMT2_WAV_NUMR", 0, 0, 16384, INTEGER4x4),
    Node:new(0x004C, "WMT2 Wave Gain", "RFRT_WMT2_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x004D, "WMT2 Wave FXM Switch", "RFRT_WMT2_FXM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x004E, "WMT2 Wave FXM Color", "RFRT_WMT2_FXM_COLOR", 0, 0, 3, INTEGER1x2),
    Node:new(0x004F, "WMT2 Wave FXM Depth", "RFRT_WMT2_FXM_DEPTH", 0, 0, 16, INTEGER1x5),
    Node:new(0x0050, "WMT2 Wave Tempo Sync", "RFRT_WMT2_TEMPO_SYNC", 0, 0, 1, INTEGER1x1),
    Node:new(0x0051, "WMT2 Wave Coarse Tune", "RFRT_WMT2_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x0052, "WMT2 Wave Fine Tune", "RFRT_WMT2_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0053, "WMT2 Wave Pan", "RFRT_WMT2_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0054, "WMT2 Wave Random Pan Switch", "RFRT_WMT2_PAN_RND", 1, 0, 1, INTEGER1x1),
    Node:new(0x0055, "WMT2 Wave Alternate Pan Switch", "RFRT_WMT2_PAN_ALT", 1, 0, 2, INTEGER1x2),
    Node:new(0x0056, "WMT2 Wave Level", "RFRT_WMT2_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0057, "WMT2 Velocity Range Lower", "RFRT_WMT2_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0058, "WMT2 Velocity Range Upper", "RFRT_WMT2_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0059, "WMT2 Velocity Fade Width Lower", "RFRT_WMT2_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x005A, "WMT2 Velocity Fade Width Upper", "RFRT_WMT2_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x005B, "WMT3 Wave Switch", "RFRT_WMT3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x005C, "WMT3 Wave Group Type", "RFRT_WMT3_WAV_GTYPE", 0, 0, 3, INTEGER1x2),
    Node:new(0x005D, "WMT3 Wave Group ID", "RFRT_WMT3_WAV_GID", 1, 0, 16384, INTEGER4x4),
    Node:new(0x0061, "WMT3 Wave Number L (Mono)", "RFRT_WMT3_WAV_NUML", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0065, "WMT3 Wave Number R", "RFRT_WMT3_WAV_NUMR", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0069, "WMT3 Wave Gain", "RFRT_WMT3_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x006A, "WMT3 Wave FXM Switch", "RFRT_WMT3_FXM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x006B, "WMT3 Wave FXM Color", "RFRT_WMT3_FXM_COLOR", 0, 0, 3, INTEGER1x2),
    Node:new(0x006C, "WMT3 Wave FXM Depth", "RFRT_WMT3_FXM_DEPTH", 0, 0, 16, INTEGER1x5),
    Node:new(0x006D, "WMT3 Wave Tempo Sync", "RFRT_WMT3_TEMPO_SYNC", 0, 0, 1, INTEGER1x1),
    Node:new(0x006E, "WMT3 Wave Coarse Tune", "RFRT_WMT3_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x006F, "WMT3 Wave Fine Tune", "RFRT_WMT3_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0070, "WMT3 Wave Pan", "RFRT_WMT3_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0071, "WMT3 Wave Random Pan Switch", "RFRT_WMT3_PAN_RND", 1, 0, 1, INTEGER1x1),
    Node:new(0x0072, "WMT3 Wave Alternate Pan Switch", "RFRT_WMT3_PAN_ALT", 1, 0, 2, INTEGER1x2),
    Node:new(0x0073, "WMT3 Wave Level", "RFRT_WMT3_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0074, "WMT3 Velocity Range Lower", "RFRT_WMT3_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0075, "WMT3 Velocity Range Upper", "RFRT_WMT3_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0076, "WMT3 Velocity Fade Width Lower", "RFRT_WMT3_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0077, "WMT3 Velocity Fade Width Upper", "RFRT_WMT3_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0078, "WMT4 Wave Switch", "RFRT_WMT4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0079, "WMT4 Wave Group Type", "RFRT_WMT4_WAV_GTYPE", 0, 0, 3, INTEGER1x2),
    Node:new(0x007A, "WMT4 Wave Group ID", "RFRT_WMT4_WAV_GID", 1, 0, 16384, INTEGER4x4),
    Node:new(0x007E, "WMT4 Wave Number L (Mono)", "RFRT_WMT4_WAV_NUML", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0102, "WMT4 Wave Number R", "RFRT_WMT4_WAV_NUMR", 0, 0, 16384, INTEGER4x4),
    Node:new(0x0106, "WMT4 Wave Gain", "RFRT_WMT4_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x0107, "WMT4 Wave FXM Switch", "RFRT_WMT4_FXM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0108, "WMT4 Wave FXM Color", "RFRT_WMT4_FXM_COLOR", 0, 0, 3, INTEGER1x2),
    Node:new(0x0109, "WMT4 Wave FXM Depth", "RFRT_WMT4_FXM_DEPTH", 0, 0, 16, INTEGER1x5),
    Node:new(0x010A, "WMT4 Wave Tempo Sync", "RFRT_WMT4_TEMPO_SYNC", 0, 0, 1, INTEGER1x1),
    Node:new(0x010B, "WMT4 Wave Coarse Tune", "RFRT_WMT4_PIT_CRS", 64, 16, 112, INTEGER1x7),
    Node:new(0x010C, "WMT4 Wave Fine Tune", "RFRT_WMT4_PIT_FINE", 64, 14, 114, INTEGER1x7),
    Node:new(0x010D, "WMT4 Wave Pan", "RFRT_WMT4_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x010E, "WMT4 Wave Random Pan Switch", "RFRT_WMT4_PAN_RND", 1, 0, 1, INTEGER1x1),
    Node:new(0x010F, "WMT4 Wave Alternate Pan Switch", "RFRT_WMT4_PAN_ALT", 1, 0, 2, INTEGER1x2),
    Node:new(0x0110, "WMT4 Wave Level", "RFRT_WMT4_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0111, "WMT4 Velocity Range Lower", "RFRT_WMT4_VRANGE_LO", 1, 1, 127, INTEGER1x7),
    Node:new(0x0112, "WMT4 Velocity Range Upper", "RFRT_WMT4_VRANGE_UP", 127, 1, 127, INTEGER1x7),
    Node:new(0x0113, "WMT4 Velocity Fade Width Lower", "RFRT_WMT4_VFADE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0114, "WMT4 Velocity Fade Width Upper", "RFRT_WMT4_VFADE_UP", 0, 0, 127, INTEGER1x7),
    Node:new(0x0115, "Pitch Env Depth", "RFRT_PENV_DEPTH", 64, 52, 76, INTEGER1x5),
    Node:new(0x0116, "Pitch Env Velocity Sens", "RFRT_PENV_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0117, "Pitch Env Time 1 Velocity Sens", "RFRT_PENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0118, "Pitch Env Time 4 Velocity Sens", "RFRT_PENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0119, "Pitch Env Time 1", "RFRT_PENV_T1", 0, 0, 127, INTEGER1x7),
    Node:new(0x011A, "Pitch Env Time 2", "RFRT_PENV_T2", 40, 0, 127, INTEGER1x7),
    Node:new(0x011B, "Pitch Env Time 3", "RFRT_PENV_T3", 80, 0, 127, INTEGER1x7),
    Node:new(0x011C, "Pitch Env Time 4", "RFRT_PENV_T4", 40, 0, 127, INTEGER1x7),
    Node:new(0x011D, "Pitch Env Level 0", "RFRT_PENV_L0", 64, 1, 127, INTEGER1x7),
    Node:new(0x011E, "Pitch Env Level 1", "RFRT_PENV_L1", 34, 1, 127, INTEGER1x7),
    Node:new(0x011F, "Pitch Env Level 2", "RFRT_PENV_L2", 94, 1, 127, INTEGER1x7),
    Node:new(0x0120, "Pitch Env Level 3", "RFRT_PENV_L3", 64, 1, 127, INTEGER1x7),
    Node:new(0x0121, "Pitch Env Level 4", "RFRT_PENV_L4", 64, 1, 127, INTEGER1x7),
    Node:new(0x0122, "TVF Filter Type", "RFRT_FILTER_TYPE", 1, 0, 6, INTEGER1x3),
    Node:new(0x0123, "TVF Cutoff Frequency", "RFRT_CUTOFF", 127, 0, 127, INTEGER1x7),
    Node:new(0x0124, "TVF Cutoff Velocity Curve", "RFRT_CUTOFF_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x0125, "TVF Cutoff Velocity Sens", "RFRT_CUTOFF_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0126, "TVF Resonance", "RFRT_RESO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0127, "TVF Resonance Velocity Sens", "RFRT_RESO_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0128, "TVF Env Depth", "RFRT_FENV_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0129, "TVF Env Velocity Curve Type", "RFRT_FENV_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x012A, "TVF Env Velocity Sens", "RFRT_FENV_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x012B, "TVF Env Time 1 Velocity Sens", "RFRT_FENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x012C, "TVF Env Time 4 Velocity Sens", "RFRT_FENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x012D, "TVF Env Time 1", "RFRT_FENV_T1", 0, 0, 127, INTEGER1x7),
    Node:new(0x012E, "TVF Env Time 2", "RFRT_FENV_T2", 10, 0, 127, INTEGER1x7),
    Node:new(0x012F, "TVF Env Time 3", "RFRT_FENV_T3", 10, 0, 127, INTEGER1x7),
    Node:new(0x0130, "TVF Env Time 4", "RFRT_FENV_T4", 64, 0, 127, INTEGER1x7),
    Node:new(0x0131, "TVF Env Level 0", "RFRT_FENV_L0", 0, 0, 127, INTEGER1x7),
    Node:new(0x0132, "TVF Env Level 1", "RFRT_FENV_L1", 127, 0, 127, INTEGER1x7),
    Node:new(0x0133, "TVF Env Level 2", "RFRT_FENV_L2", 127, 0, 127, INTEGER1x7),
    Node:new(0x0134, "TVF Env Level 3", "RFRT_FENV_L3", 127, 0, 127, INTEGER1x7),
    Node:new(0x0135, "TVF Env Level 4", "RFRT_FENV_L4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0136, "TVA Level Velocity Curve", "RFRT_LEVEL_VCRV", 1, 0, 7, INTEGER1x3),
    Node:new(0x0137, "TVA Level Velocity Sens", "RFRT_LEVEL_VSENS", 96, 1, 127, INTEGER1x7),
    Node:new(0x0138, "TVA Env Time 1 Velocity Sens", "RFRT_AENV_T1_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0139, "TVA Env Time 4 Velocity Sens", "RFRT_AENV_T4_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x013A, "TVA Env Time 1", "RFRT_AENV_T1", 0, 0, 127, INTEGER1x7),
    Node:new(0x013B, "TVA Env Time 2", "RFRT_AENV_T2", 10, 0, 127, INTEGER1x7),
    Node:new(0x013C, "TVA Env Time 3", "RFRT_AENV_T3", 10, 0, 127, INTEGER1x7),
    Node:new(0x013D, "TVA Env Time 4", "RFRT_AENV_T4", 10, 0, 127, INTEGER1x7),
    Node:new(0x013E, "TVA Env Level 1", "RFRT_AENV_L1", 127, 0, 127, INTEGER1x7),
    Node:new(0x013F, "TVA Env Level 2", "RFRT_AENV_L2", 127, 0, 127, INTEGER1x7),
    Node:new(0x0140, "TVA Env Level 3", "RFRT_AENV_L3", 127, 0, 127, INTEGER1x7),
    Node:new(0x0141, "One Shot Mode", "RFRT_ONE_SHOT", 0, 0, 1, INTEGER1x1),
    Node:new(0x0142, "Relative Level", "RFRT_LEVEL_MOD", 64, 0, 127, INTEGER1x7),
}

local RLGT4 = --  Rhythm Set Controller
{
    Node:new(0x0000, "Beam Switch", "RFRLGT4_BEAM_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "Beam Assign", "RFRLGT4_BEAM_ASGN", 2, 0, 106, INTEGER1x7),
    Node:new(0x0002, "Beam Polarity", "RFRLGT4_BEAM_POL", 0, 0, 1, INTEGER1x1),
    Node:new(0x0003, "Beam Range Lower", "RFRLGT4_BEAM_RANGE_LO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Beam Range Upper", "RFRLGT4_BEAM_RANGE_UP", 127, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Knob 1 Assign", "RFRLGT4_KNOB1_ASGN", 0, 0, 100, INTEGER1x7),
    Node:new(0x0006, "Knob 2 Assign", "RFRLGT4_KNOB2_ASGN", 0, 0, 100, INTEGER1x7),
    Node:new(0x0007, "Knob 3 Assign", "RFRLGT4_KNOB3_ASGN", 0, 0, 100, INTEGER1x7),
    Node:new(0x0008, "Knob 4 Assign", "RFRLGT4_KNOB4_ASGN", 0, 0, 100, INTEGER1x7),
    Node:new(0x0009, "Switch 1 Assign", "RFRLGT4_SW1_ASGN", 0, 0, 104, INTEGER1x7),
    Node:new(0x000A, "Switch 1 Assign Mode", "RFRLGT4_SW1_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000B, "Switch 2 Assign", "RFRLGT4_SW2_ASGN", 0, 0, 104, INTEGER1x7),
    Node:new(0x000C, "Switch 2 Assign Mode", "RFRLGT4_SW2_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000D, "Switch 3 Assign", "RFRLGT4_SW3_ASGN", 0, 0, 104, INTEGER1x7),
    Node:new(0x000E, "Switch 3 Assign Mode", "RFRLGT4_SW3_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000F, "Switch 4 Assign", "RFRLGT4_SW4_ASGN", 0, 0, 104, INTEGER1x7),
    Node:new(0x0010, "Switch 4 Assign Mode", "RFRLGT4_SW4_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x0011, "Pattern Switch", "RFRLGT4_PTN_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0012, "Pattern Hold", "RFRLGT4_PTN_HOLD", 1, 0, 1, INTEGER1x1),
    Node:new(0x0013, "Pattern Style", "RFRLGT4_PTN_STYLE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Pattern Accent Rate", "RFRLGT4_PTN_ACCT_RATE", 100, 0, 100, INTEGER1x7),
    Node:new(0x0015, "Pattern Shuffle Rate", "RFRLGT4_PTN_SHFL_RATE", 50, 0, 100, INTEGER1x7),
    Node:new(0x0016, "Pattern Shuffle Resolution", "RFRLGT4_PTN_SHFL_RESO", 0, 0, 1, INTEGER1x1),
    Node:new(0x0017, "Pattern Keyboard Velocity", "RFRLGT4_PTN_VELO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Pattern Note Assign", "RFRLGT4_PTN_NOTE_ASGN", 60, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Pattern Key Trigger", "RFRLGT4_PTN_KEY_TRIG", 0, 0, 1, INTEGER1x1),
}

local RC2 = --  Rhythm Set Common 2
{
    Node:new(0x0000, "(reserve)", "RESERVE_DUMMY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Phrase Number", "RFRC2_PHRASE", 0, 0, 255, INTEGER2x4),
    Node:new(0x0012, "Keyword Flag 1 ", "RFRC2_KEYWORD1", 0, 0, 1, INTEGER1x1),
    Node:new(0x0013, "Keyword Flag 2 ", "RFRC2_KEYWORD2", 0, 0, 1, INTEGER1x1),
    Node:new(0x0014, "Keyword Flag 3 ", "RFRC2_KEYWORD3", 0, 0, 1, INTEGER1x1),
    Node:new(0x0015, "Keyword Flag 4 ", "RFRC2_KEYWORD4", 0, 0, 1, INTEGER1x1),
    Node:new(0x0016, "Keyword Flag 5 ", "RFRC2_KEYWORD5", 0, 0, 1, INTEGER1x1),
    Node:new(0x0017, "Keyword Flag 6 ", "RFRC2_KEYWORD6", 0, 0, 1, INTEGER1x1),
    Node:new(0x0018, "Keyword Flag 7 ", "RFRC2_KEYWORD7", 0, 0, 1, INTEGER1x1),
    Node:new(0x0019, "Keyword Flag 8 ", "RFRC2_KEYWORD8", 0, 0, 1, INTEGER1x1),
    Node:new(0x001A, "Keyword Flag 9 ", "RFRC2_KEYWORD9", 0, 0, 1, INTEGER1x1),
    Node:new(0x001B, "Keyword Flag 10", "RFRC2_KEYWORD10", 0, 0, 1, INTEGER1x1),
    Node:new(0x001C, "Keyword Flag 11", "RFRC2_KEYWORD11", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Keyword Flag 12", "RFRC2_KEYWORD12", 0, 0, 1, INTEGER1x1),
    Node:new(0x001E, "Keyword Flag 13", "RFRC2_KEYWORD13", 0, 0, 1, INTEGER1x1),
    Node:new(0x001F, "Keyword Flag 14", "RFRC2_KEYWORD14", 0, 0, 1, INTEGER1x1),
    Node:new(0x0020, "Keyword Flag 15", "RFRC2_KEYWORD15", 0, 0, 1, INTEGER1x1),
    Node:new(0x0021, "Keyword Flag 16", "RFRC2_KEYWORD16", 0, 0, 1, INTEGER1x1),
    Node:new(0x0022, "Keyword Flag 17", "RFRC2_KEYWORD17", 0, 0, 1, INTEGER1x1),
    Node:new(0x0023, "Keyword Flag 18", "RFRC2_KEYWORD18", 0, 0, 1, INTEGER1x1),
    Node:new(0x0024, "Keyword Flag 19", "RFRC2_KEYWORD19", 0, 0, 1, INTEGER1x1),
    Node:new(0x0025, "Keyword Flag 20", "RFRC2_KEYWORD20", 0, 0, 1, INTEGER1x1),
    Node:new(0x0026, "Keyword Flag 21", "RFRC2_KEYWORD21", 0, 0, 1, INTEGER1x1),
    Node:new(0x0027, "Keyword Flag 22", "RFRC2_KEYWORD22", 0, 0, 1, INTEGER1x1),
    Node:new(0x0028, "Keyword Flag 23", "RFRC2_KEYWORD23", 0, 0, 1, INTEGER1x1),
    Node:new(0x0029, "Keyword Flag 24", "RFRC2_KEYWORD24", 0, 0, 1, INTEGER1x1),
    Node:new(0x002A, "Keyword Flag 25", "RFRC2_KEYWORD25", 0, 0, 1, INTEGER1x1),
    Node:new(0x002B, "Keyword Flag 26", "RFRC2_KEYWORD26", 0, 0, 1, INTEGER1x1),
    Node:new(0x002C, "Keyword Flag 27", "RFRC2_KEYWORD27", 0, 0, 1, INTEGER1x1),
    Node:new(0x002D, "Keyword Flag 28", "RFRC2_KEYWORD28", 0, 0, 1, INTEGER1x1),
    Node:new(0x002E, "Keyword Flag 29", "RFRC2_KEYWORD29", 0, 0, 1, INTEGER1x1),
    Node:new(0x002F, "Keyword Flag 30", "RFRC2_KEYWORD30", 0, 0, 1, INTEGER1x1),
    Node:new(0x0030, "Keyword Flag 31", "RFRC2_KEYWORD31", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "TFX Switch", "RFRC2_TFX_SW", 1, 0, 1, INTEGER1x1),
}

local RTM = --  Rhythm Set Tone Modify
{
    Node:new(0x0001, "Modify Parameter 1 ", "RFRTM_MOD_PRM1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Modify Parameter 2 ", "RFRTM_MOD_PRM2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Modify Parameter 3 ", "RFRTM_MOD_PRM3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Modify Parameter 4 ", "RFRTM_MOD_PRM4", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Modify Parameter 5 ", "RFRTM_MOD_PRM5", 0, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Modify Parameter 6 ", "RFRTM_MOD_PRM6", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Modify Parameter 7 ", "RFRTM_MOD_PRM7", 0, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Modify Parameter 8 ", "RFRTM_MOD_PRM8", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Modify Parameter 9 ", "RFRTM_MOD_PRM9", 0, 0, 127, INTEGER1x7),
    Node:new(0x000A, "Modify Parameter 10", "RFRTM_MOD_PRM10", 0, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Modify Parameter 11", "RFRTM_MOD_PRM11", 0, 0, 127, INTEGER1x7),
    Node:new(0x000C, "Modify Parameter 12", "RFRTM_MOD_PRM12", 0, 0, 127, INTEGER1x7),
    Node:new(0x000D, "Modify Parameter 13", "RFRTM_MOD_PRM13", 0, 0, 127, INTEGER1x7),
    Node:new(0x000E, "Modify Parameter 14", "RFRTM_MOD_PRM14", 0, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Modify Parameter 15", "RFRTM_MOD_PRM15", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Modify Parameter 16", "RFRTM_MOD_PRM16", 0, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Modify Parameter 17", "RFRTM_MOD_PRM17", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Modify Parameter 18", "RFRTM_MOD_PRM18", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Modify Parameter 19", "RFRTM_MOD_PRM19", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Modify Parameter 20", "RFRTM_MOD_PRM20", 0, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Modify Parameter 21", "RFRTM_MOD_PRM21", 0, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Modify Parameter 22", "RFRTM_MOD_PRM22", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Modify Parameter 23", "RFRTM_MOD_PRM23", 0, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Modify Parameter 24", "RFRTM_MOD_PRM24", 0, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Modify Parameter 25", "RFRTM_MOD_PRM25", 0, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Modify Parameter 26", "RFRTM_MOD_PRM26", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Modify Parameter 27", "RFRTM_MOD_PRM27", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Modify Parameter 28", "RFRTM_MOD_PRM28", 0, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Modify Parameter 29", "RFRTM_MOD_PRM29", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Modify Parameter 30", "RFRTM_MOD_PRM30", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Modify Parameter 31", "RFRTM_MOD_PRM31", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Modify Parameter 32", "RFRTM_MOD_PRM32", 0, 0, 127, INTEGER1x7),
}

local SHPC = --  SN Synth Tone Common
{
    Node:new(0x0000, "Tone Name", "SHPC_NAME", 0, 32, 127, ByteSize12),
    Node:new(0x000C, "Tone Level", "SHPC_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Portamento Switch", "SHPC_PORT_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0013, "Portamento Time", "SHPC_PORT_TIME", 20, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Mono Switch", "SHPC_MONO_SW", 0, 0, 1, INTEGER1x2),
    Node:new(0x0015, "Octave Shift", "SHPC_OCTAVE", 64, 61, 67, INTEGER1x3),
    Node:new(0x0016, "Pitch Bend Range Up", "SHPC_BEND_RANGE_UP", 2, 0, 24, INTEGER1x5),
    Node:new(0x0017, "Pitch Bend Range Down", "SHPC_BEND_RANGE_DW", 2, 0, 24, INTEGER1x5),
    Node:new(0x0019, "Partial1 Switch", "SHPC_TONE1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001A, "Partial1 Select", "SHPC_TONE1_SEL", 0, 0, 1, INTEGER1x1),
    Node:new(0x001B, "Partial2 Switch", "SHPC_TONE2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001C, "Partial2 Select", "SHPC_TONE2_SEL", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Partial3 Switch", "SHPC_TONE3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001E, "Partial3 Select", "SHPC_TONE3_SEL", 0, 0, 1, INTEGER1x1),
    Node:new(0x001F, "RING Switch", "SHPC_SYNC_RING_SEL", 0, 0, 2, INTEGER1x2),
    Node:new(0x0020, "TFX Switch", "SHPC_TFX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x002E, "Unison Switch", "SHPC_UNISON", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "Portamento Mode", "SHPC_PORT_MODE", 1, 0, 1, INTEGER1x1),
    Node:new(0x0032, "Legato Switch", "SHPC_LEGATO_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0034, "Analog Feel", "SHPC_ANALOG_FEEL", 0, 0, 127, INTEGER1x7),
    Node:new(0x0035, "Wave Shape", "SHPC_CROSS_MOD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0036, "Tone Category", "SHPC_CATE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0037, "Phrase Number", "SHPC_PHRASE", 0, 0, 65535, INTEGER4x4),
    Node:new(0x003B, "Phrase Octave Shift", "SHPC_PHRASE_OCT", 64, 61, 67, INTEGER1x3),
    Node:new(0x003C, "Unison Size", "SHPC_UNISON_SIZE", 3, 0, 3, INTEGER1x2),
}

local SHPF = --  SN Synth Tone Common MFX
{
    Node:new(0x0000, "MFX Type", "SHPF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "SHPF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "SHPF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "SHPF_MFX_REV_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "SHPF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "SHPF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "SHPF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "SHPF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "SHPF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "SHPF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "SHPF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "SHPF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "SHPF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "SHPF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "SHPF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "SHPF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "SHPF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "SHPF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "SHPF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "SHPF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "SHPF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "SHPF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "SHPF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "SHPF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "SHPF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "SHPF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "SHPF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "SHPF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "SHPF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "SHPF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "SHPF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "SHPF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "SHPF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "SHPF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "SHPF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "SHPF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "SHPF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "SHPF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "SHPF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "SHPF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "SHPF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "SHPF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "SHPF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "SHPF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "SHPF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "SHPF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "SHPF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "SHPF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local SHPTM = --  SN Synth Tone Modify
{
    Node:new(0x0000, "(reserve)", "RESERVE_DUMMY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0001, "Attack Time Interval Sens ", "SHPTM_MOD_PRM1", 0, 0, 127, INTEGER1x7),
    Node:new(0x0002, "Release Time Interval Sens ", "SHPTM_MOD_PRM2", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "Portamento Time Interval Sens ", "SHPTM_MOD_PRM3", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Envelope Loop Mode ", "SHPTM_MOD_PRM4", 0, 0, 2, INTEGER1x7),
    Node:new(0x0005, "Envelope Loop Sync Note ", "SHPTM_MOD_PRM5", 0, 0, 21, INTEGER1x7),
    Node:new(0x0006, "Chromatic Portamento ", "SHPTM_MOD_PRM6", 0, 0, 1, INTEGER1x1),
    Node:new(0x0007, "Modify Parameter 7 ", "SHPTM_MOD_PRM7", 0, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Modify Parameter 8 ", "SHPTM_MOD_PRM8", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "Modify Parameter 9 ", "SHPTM_MOD_PRM9", 0, 0, 127, INTEGER1x7),
    Node:new(0x000A, "Modify Parameter 10", "SHPTM_MOD_PRM10", 0, 0, 127, INTEGER1x7),
    Node:new(0x000B, "Modify Parameter 11", "SHPTM_MOD_PRM11", 0, 0, 127, INTEGER1x7),
    Node:new(0x000C, "Modify Parameter 12", "SHPTM_MOD_PRM12", 0, 0, 127, INTEGER1x7),
    Node:new(0x000D, "Modify Parameter 13", "SHPTM_MOD_PRM13", 0, 0, 127, INTEGER1x7),
    Node:new(0x000E, "Modify Parameter 14", "SHPTM_MOD_PRM14", 0, 0, 127, INTEGER1x7),
    Node:new(0x000F, "Modify Parameter 15", "SHPTM_MOD_PRM15", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "Modify Parameter 16", "SHPTM_MOD_PRM16", 0, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Modify Parameter 17", "SHPTM_MOD_PRM17", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Modify Parameter 18", "SHPTM_MOD_PRM18", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Modify Parameter 19", "SHPTM_MOD_PRM19", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Modify Parameter 20", "SHPTM_MOD_PRM20", 0, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Modify Parameter 21", "SHPTM_MOD_PRM21", 0, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Modify Parameter 22", "SHPTM_MOD_PRM22", 0, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Modify Parameter 23", "SHPTM_MOD_PRM23", 0, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Modify Parameter 24", "SHPTM_MOD_PRM24", 0, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Modify Parameter 25", "SHPTM_MOD_PRM25", 0, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Modify Parameter 26", "SHPTM_MOD_PRM26", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "Modify Parameter 27", "SHPTM_MOD_PRM27", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Modify Parameter 28", "SHPTM_MOD_PRM28", 0, 0, 127, INTEGER1x7),
    Node:new(0x001D, "Modify Parameter 29", "SHPTM_MOD_PRM29", 0, 0, 127, INTEGER1x7),
    Node:new(0x001E, "Modify Parameter 30", "SHPTM_MOD_PRM30", 0, 0, 127, INTEGER1x7),
    Node:new(0x001F, "Modify Parameter 31", "SHPTM_MOD_PRM31", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Modify Parameter 32", "SHPTM_MOD_PRM32", 0, 0, 127, INTEGER1x7),
}

local SHPT = --  SN Synth Tone Partial
{
    Node:new(0x0000, "OSC Wave", "SHPT_OSC_WAVE", 0, 0, 7, INTEGER1x3),
    Node:new(0x0001, "OSC Wave Variation", "SHPT_OSC_WAVE_VAR", 0, 0, 2, INTEGER1x6),
    Node:new(0x0003, "OSC Pitch", "SHPT_OSC_PIT_CRS", 64, 40, 88, INTEGER1x6),
    Node:new(0x0004, "OSC Detune", "SHPT_OSC_PIT_DETUNE", 64, 14, 114, INTEGER1x7),
    Node:new(0x0005, "OSC Pulse Width Mod Depth", "SHPT_OSC_PWM", 0, 0, 127, INTEGER1x7),
    Node:new(0x0006, "OSC Pulse Width", "SHPT_OSC_PW", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "OSC Pitch Env Attack Time", "SHPT_OSC_PENV_ATK", 0, 0, 127, INTEGER1x7),
    Node:new(0x0008, "OSC Pitch Env Decay ", "SHPT_OSC_PENV_DCY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0009, "OSC Pitch Env Depth ", "SHPT_OSC_PENV_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x000A, "FILTER Mode", "SHPT_FILT_MODE", 1, 0, 7, INTEGER1x3),
    Node:new(0x000B, "FILTER Slope", "SHPT_FILT_SLOPE", 1, 0, 1, INTEGER1x1),
    Node:new(0x000C, "FILTER Cutoff", "SHPT_FILT_FREQ", 127, 0, 127, INTEGER1x7),
    Node:new(0x000D, "FILTER Cutoff Keyfollow", "SHPT_FILT_FREQ_KF", 64, 54, 74, INTEGER1x6),
    Node:new(0x000E, "FILTER Env Velocity Sens", "SHPT_FILT_ENV_VSENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000F, "FILTER Resonance", "SHPT_FILT_RESO", 0, 0, 127, INTEGER1x7),
    Node:new(0x0010, "FILTER Env Attack Time", "SHPT_FILT_ENV_ATK", 0, 0, 127, INTEGER1x7),
    Node:new(0x0011, "FILTER Env Decay Time ", "SHPT_FILT_ENV_DCY", 36, 0, 127, INTEGER1x7),
    Node:new(0x0012, "FILTER Env Sustain Level", "SHPT_FILT_ENV_SUS", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "FILTER Env Release Time", "SHPT_FILT_ENV_REL", 0, 0, 127, INTEGER1x7),
    Node:new(0x0014, "FILTER Env Depth ", "SHPT_FILT_ENV_DEPTH", 64, 1, 127, INTEGER1x7),
    Node:new(0x0015, "AMP Level", "SHPT_AMP_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x0016, "AMP Level Velocity Sens", "SHPT_AMP_LEVEL_VSENS", 83, 1, 127, INTEGER1x7),
    Node:new(0x0017, "AMP Env Attack Time", "SHPT_AMP_ENV_ATK", 0, 0, 127, INTEGER1x7),
    Node:new(0x0018, "AMP Env Decay Time ", "SHPT_AMP_ENV_DCY", 0, 0, 127, INTEGER1x7),
    Node:new(0x0019, "AMP Env Sustain Level", "SHPT_AMP_ENV_SUS", 127, 0, 127, INTEGER1x7),
    Node:new(0x001A, "AMP Env Release Time", "SHPT_AMP_ENV_REL", 0, 0, 127, INTEGER1x7),
    Node:new(0x001B, "AMP Pan", "SHPT_AMP_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x001C, "LFO Shape", "SHPT_LFO_SHAPE", 0, 0, 5, INTEGER1x3),
    Node:new(0x001D, "LFO Rate", "SHPT_LFO_RATE", 81, 0, 127, INTEGER1x7),
    Node:new(0x001E, "LFO Tempo Sync Switch", "SHPT_LFO_SYNC_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001F, "LFO Tempo Sync Note", "SHPT_LFO_SYNC_NOTE", 17, 0, 19, INTEGER1x5),
    Node:new(0x0020, "LFO Fade Time", "SHPT_LFO_FADE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0021, "LFO Key Trigger", "SHPT_LFO_KEY_TRIG", 0, 0, 1, INTEGER1x1),
    Node:new(0x0022, "LFO Pitch Depth", "SHPT_LFO_PITCH_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x0023, "LFO Filter Depth", "SHPT_LFO_FILTER_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x0024, "LFO Amp Depth", "SHPT_LFO_AMP_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x0025, "LFO Pan Depth", "SHPT_LFO_PAN_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x0026, "Modulation LFO Shape", "SHPT_MLFO_SHAPE", 0, 0, 5, INTEGER1x3),
    Node:new(0x0027, "Modulation LFO Rate", "SHPT_MLFO_RATE", 88, 0, 127, INTEGER1x7),
    Node:new(0x0028, "Modulation LFO Tempo Sync Switch", "SHPT_MLFO_SYNC_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0029, "Modulation LFO Tempo Sync Note", "SHPT_MLFO_SYNC_NOTE", 17, 0, 19, INTEGER1x5),
    Node:new(0x002A, "OSC Pulse Width Shift", "SHPT_OSC_PW_SHIFT", 127, 0, 127, INTEGER1x7),
    Node:new(0x002C, "Modulation LFO Pitch Depth", "SHPT_MLFO_PITCH_MOD", 80, 1, 127, INTEGER1x7),
    Node:new(0x002D, "Modulation LFO Filter Depth", "SHPT_MLFO_FILTER_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x002E, "Modulation LFO Amp Depth", "SHPT_MLFO_AMP_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x002F, "Modulation LFO Pan Depth", "SHPT_MLFO_PAN_MOD", 64, 1, 127, INTEGER1x7),
    Node:new(0x0030, "Cutoff Aftertouch Sens", "SHPT_AFT_CUTOFF_SENS", 73, 1, 127, INTEGER1x7),
    Node:new(0x0031, "Level Aftertouch Sens", "SHPT_AFT_LEVEL_SENS", 74, 1, 127, INTEGER1x7),
    Node:new(0x0034, "Wave Gain", "SHPT_WAV_GAIN", 1, 0, 3, INTEGER1x2),
    Node:new(0x0035, "Wave Number", "SHPT_WAV_NUML", 45, 1, 450, INTEGER4x4),
    Node:new(0x0039, "HPF Cutoff", "SHPT_HPF_CUTOFF", 0, 0, 127, INTEGER1x7),
    Node:new(0x003A, "Super Saw Detune", "SHPT_SSAW_DETUNE", 0, 0, 127, INTEGER1x7),
    Node:new(0x003B, "Modulation LFO Rate Control", "SHPT_MLFO_RATE_MOD", 82, 1, 127, INTEGER1x7),
    Node:new(0x003C, "AMP Level Keyfollow", "SHPT_BIAS_LEVEL", 64, 54, 74, INTEGER1x5),
}

local SNTC = --  SN Tone Common
{
    Node:new(0x0000, "Tone Name", "SNTC_NAME", 0, 32, 127, ByteSize16),
    Node:new(0x0010, "Tone Level", "SNTC_TONE_LEVEL", 127, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Mono/Poly", "SNTC_MONO_POLY", 1, 0, 1, INTEGER1x1),
    Node:new(0x0012, "Portamento Time Offset", "SNTC_PORT_TIME", 64, 0, 127, INTEGER1x7),
    Node:new(0x0013, "Cutoff Offset", "SNTC_CUTOFF_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0014, "Resonance Offset", "SNTC_RESO_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0015, "Attack Time Offset", "SNTC_ATK_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0016, "Release Time Offset", "SNTC_REL_OFST", 64, 0, 127, INTEGER1x7),
    Node:new(0x0017, "Vibrato Rate", "SNTC_VIB_RATE", 64, 0, 127, INTEGER1x7),
    Node:new(0x0018, "Vibrato Depth", "SNTC_VIB_DEPTH", 64, 0, 127, INTEGER1x7),
    Node:new(0x0019, "Vibrato Delay", "SNTC_VIB_DELAY", 64, 0, 127, INTEGER1x7),
    Node:new(0x001A, "Octave Shift", "SNTC_OCTAVE", 64, 61, 67, INTEGER1x3),
    Node:new(0x001B, "Category", "SNTC_CATE", 0, 0, 127, INTEGER1x7),
    Node:new(0x001C, "Phrase Number", "SNTC_PHRASE", 0, 0, 255, INTEGER2x4),
    Node:new(0x001E, "Phrase Octave Shift", "SNTC_PHRASE_OCT", 64, 61, 67, INTEGER1x3),
    Node:new(0x001F, "TFX Switch", "SNTC_TFX_SW", 1, 0, 1, INTEGER1x1),
    Node:new(0x0020, "Inst Variation", "SNTC_INST_BS_LSB", 64, 0, 127, INTEGER1x7),
    Node:new(0x0021, "Inst Number", "SNTC_INST_BS_PC", 0, 0, 127, INTEGER1x7, "mod", 0),
    Node:new(0x0022, "Modify Parameter 1 ", "SNTC_MOD_PRM1", 0, 0, 127, INTEGER1x7, "mod", 0),
    Node:new(0x0023, "Modify Parameter 2 ", "SNTC_MOD_PRM2", 0, 0, 127, INTEGER1x7, "mod", 1),
    Node:new(0x0024, "Modify Parameter 3 ", "SNTC_MOD_PRM3", 0, 0, 127, INTEGER1x7, "mod", 2),
    Node:new(0x0025, "Modify Parameter 4 ", "SNTC_MOD_PRM4", 0, 0, 127, INTEGER1x7, "mod", 3),
    Node:new(0x0026, "Modify Parameter 5 ", "SNTC_MOD_PRM5", 0, 0, 127, INTEGER1x7, "mod", 4),
    Node:new(0x0027, "Modify Parameter 6 ", "SNTC_MOD_PRM6", 0, 0, 127, INTEGER1x7, "mod", 5),
    Node:new(0x0028, "Modify Parameter 7 ", "SNTC_MOD_PRM7", 0, 0, 127, INTEGER1x7, "mod", 6),
    Node:new(0x0029, "Modify Parameter 8 ", "SNTC_MOD_PRM8", 0, 0, 127, INTEGER1x7, "mod", 7),
    Node:new(0x002A, "Modify Parameter 9 ", "SNTC_MOD_PRM9", 0, 0, 127, INTEGER1x7, "mod", 8),
    Node:new(0x002B, "Modify Parameter 10", "SNTC_MOD_PRM10", 0, 0, 127, INTEGER1x7, "mod", 9),
    Node:new(0x002C, "Modify Parameter 11", "SNTC_MOD_PRM11", 0, 0, 127, INTEGER1x7, "mod", 10),
    Node:new(0x002D, "Modify Parameter 12", "SNTC_MOD_PRM12", 0, 0, 127, INTEGER1x7, "mod", 11),
    Node:new(0x002E, "Modify Parameter 13", "SNTC_MOD_PRM13", 0, 0, 127, INTEGER1x7, "mod", 12),
    Node:new(0x002F, "Modify Parameter 14", "SNTC_MOD_PRM14", 0, 0, 127, INTEGER1x7, "mod", 13),
    Node:new(0x0030, "Modify Parameter 15", "SNTC_MOD_PRM15", 0, 0, 127, INTEGER1x7, "mod", 14),
    Node:new(0x0031, "Modify Parameter 16", "SNTC_MOD_PRM16", 0, 0, 127, INTEGER1x7, "mod", 15),
    Node:new(0x0032, "Modify Parameter 17", "SNTC_MOD_PRM17", 0, 0, 127, INTEGER1x7, "mod", 16),
    Node:new(0x0033, "Modify Parameter 18", "SNTC_MOD_PRM18", 0, 0, 127, INTEGER1x7, "mod", 17),
    Node:new(0x0034, "Modify Parameter 19", "SNTC_MOD_PRM19", 0, 0, 127, INTEGER1x7, "mod", 18),
    Node:new(0x0035, "Modify Parameter 20", "SNTC_MOD_PRM20", 0, 0, 127, INTEGER1x7, "mod", 19),
    Node:new(0x0036, "Modify Parameter 21", "SNTC_MOD_PRM21", 0, 0, 127, INTEGER1x7, "mod", 20),
    Node:new(0x0037, "Modify Parameter 22", "SNTC_MOD_PRM22", 0, 0, 127, INTEGER1x7, "mod", 21),
    Node:new(0x0038, "Modify Parameter 23", "SNTC_MOD_PRM23", 0, 0, 127, INTEGER1x7, "mod", 22),
    Node:new(0x0039, "Modify Parameter 24", "SNTC_MOD_PRM24", 0, 0, 127, INTEGER1x7, "mod", 23),
    Node:new(0x003A, "Modify Parameter 25", "SNTC_MOD_PRM25", 0, 0, 127, INTEGER1x7, "mod", 24),
    Node:new(0x003B, "Modify Parameter 26", "SNTC_MOD_PRM26", 0, 0, 127, INTEGER1x7, "mod", 25),
    Node:new(0x003C, "Modify Parameter 27", "SNTC_MOD_PRM27", 0, 0, 127, INTEGER1x7, "mod", 26),
    Node:new(0x003D, "Modify Parameter 28", "SNTC_MOD_PRM28", 0, 0, 127, INTEGER1x7, "mod", 27),
    Node:new(0x003E, "Modify Parameter 29", "SNTC_MOD_PRM29", 0, 0, 127, INTEGER1x7, "mod", 28),
    Node:new(0x003F, "Modify Parameter 30", "SNTC_MOD_PRM30", 0, 0, 127, INTEGER1x7, "mod", 29),
    Node:new(0x0040, "Modify Parameter 31", "SNTC_MOD_PRM31", 0, 0, 127, INTEGER1x7, "mod", 30),
    Node:new(0x0041, "Modify Parameter 32", "SNTC_MOD_PRM32", 0, 0, 127, INTEGER1x7, "mod", 31),
}

local SNTF = --  SN Tone MFX
{
    Node:new(0x0000, "MFX Type", "SNTF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "SNTF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "SNTF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "SNTF_MFX_REV_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "SNTF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "SNTF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "SNTF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "SNTF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "SNTF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "SNTF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "SNTF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "SNTF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "SNTF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "SNTF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "SNTF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "SNTF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "SNTF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "SNTF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "SNTF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "SNTF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "SNTF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "SNTF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "SNTF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "SNTF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "SNTF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "SNTF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "SNTF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "SNTF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "SNTF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "SNTF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "SNTF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "SNTF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "SNTF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "SNTF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "SNTF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "SNTF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "SNTF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "SNTF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "SNTF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "SNTF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "SNTF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "SNTF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "SNTF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "SNTF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "SNTF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "SNTF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "SNTF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "SNTF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local KC = --  Kit Common
{
    Node:new(0x0000, "Kit Name", "SDKC_NAME", 0, 32, 127, ByteSize16),
    Node:new(0x0010, "Kit Level", "SDKC_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x0011, "Ambience Level", "SDKC_AMBIENCE_LEVEL", 64, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Phrase Number", "SDKC_PHRASE", 0, 0, 127, INTEGER1x7),
    Node:new(0x0013, "TFX Switch", "SDKC_TFX_SW", 1, 0, 1, INTEGER1x1),
}

local KF = --  Kit MFX
{
    Node:new(0x0000, "MFX Type", "SDKF_MFX_TYPE", 0, 0, 67, INTEGER1x7, "mfx"),
    Node:new(0x0001, "MFX Dry Send Level", "SDKF_MFX_DRY_SEND", 127, 0, 127, INTEGER1x7),
    Node:new(0x0002, "MFX Chorus Send Level", "SDKF_MFX_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0003, "MFX Reverb Send Level", "SDKF_MFX_REV_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0005, "MFX Control 1 Source", "SDKF_MFX_CTRL1_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0006, "MFX Control 1 Sens", "SDKF_MFX_CTRL1_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0007, "MFX Control 2 Source", "SDKF_MFX_CTRL2_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x0008, "MFX Control 2 Sens", "SDKF_MFX_CTRL2_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x0009, "MFX Control 3 Source", "SDKF_MFX_CTRL3_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000A, "MFX Control 3 Sens", "SDKF_MFX_CTRL3_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000B, "MFX Control 4 Source", "SDKF_MFX_CTRL4_SRC", 0, 0, 101, INTEGER1x7),
    Node:new(0x000C, "MFX Control 4 Sens", "SDKF_MFX_CTRL4_SENS", 64, 1, 127, INTEGER1x7),
    Node:new(0x000D, "MFX Control Assign 1", "SDKF_MFX_CTRL_ASGN1", 0, 0, 16, INTEGER1x5, "mfx", 0),
    Node:new(0x000E, "MFX Control Assign 2", "SDKF_MFX_CTRL_ASGN2", 0, 0, 16, INTEGER1x5, "mfx", 1),
    Node:new(0x000F, "MFX Control Assign 3", "SDKF_MFX_CTRL_ASGN3", 0, 0, 16, INTEGER1x5, "mfx", 2),
    Node:new(0x0010, "MFX Control Assign 4", "SDKF_MFX_CTRL_ASGN4", 0, 0, 16, INTEGER1x5, "mfx", 3),
    Node:new(0x0011, "MFX Parameter 1 ", "SDKF_MFX_PRM1", 32768, 12768, 52768, INTEGER4x4, "mfx", 4),
    Node:new(0x0015, "MFX Parameter 2 ", "SDKF_MFX_PRM2", 32768, 12768, 52768, INTEGER4x4, "mfx", 5),
    Node:new(0x0019, "MFX Parameter 3 ", "SDKF_MFX_PRM3", 32768, 12768, 52768, INTEGER4x4, "mfx", 6),
    Node:new(0x001D, "MFX Parameter 4 ", "SDKF_MFX_PRM4", 32768, 12768, 52768, INTEGER4x4, "mfx", 7),
    Node:new(0x0021, "MFX Parameter 5 ", "SDKF_MFX_PRM5", 32768, 12768, 52768, INTEGER4x4, "mfx", 8),
    Node:new(0x0025, "MFX Parameter 6 ", "SDKF_MFX_PRM6", 32768, 12768, 52768, INTEGER4x4, "mfx", 9),
    Node:new(0x0029, "MFX Parameter 7 ", "SDKF_MFX_PRM7", 32768, 12768, 52768, INTEGER4x4, "mfx", 10),
    Node:new(0x002D, "MFX Parameter 8 ", "SDKF_MFX_PRM8", 32768, 12768, 52768, INTEGER4x4, "mfx", 11),
    Node:new(0x0031, "MFX Parameter 9 ", "SDKF_MFX_PRM9", 32768, 12768, 52768, INTEGER4x4, "mfx", 12),
    Node:new(0x0035, "MFX Parameter 10", "SDKF_MFX_PRM10", 32768, 12768, 52768, INTEGER4x4, "mfx", 13),
    Node:new(0x0039, "MFX Parameter 11", "SDKF_MFX_PRM11", 32768, 12768, 52768, INTEGER4x4, "mfx", 14),
    Node:new(0x003D, "MFX Parameter 12", "SDKF_MFX_PRM12", 32768, 12768, 52768, INTEGER4x4, "mfx", 15),
    Node:new(0x0041, "MFX Parameter 13", "SDKF_MFX_PRM13", 32768, 12768, 52768, INTEGER4x4, "mfx", 16),
    Node:new(0x0045, "MFX Parameter 14", "SDKF_MFX_PRM14", 32768, 12768, 52768, INTEGER4x4, "mfx", 17),
    Node:new(0x0049, "MFX Parameter 15", "SDKF_MFX_PRM15", 32768, 12768, 52768, INTEGER4x4, "mfx", 18),
    Node:new(0x004D, "MFX Parameter 16", "SDKF_MFX_PRM16", 32768, 12768, 52768, INTEGER4x4, "mfx", 19),
    Node:new(0x0051, "MFX Parameter 17", "SDKF_MFX_PRM17", 32768, 12768, 52768, INTEGER4x4, "mfx", 20),
    Node:new(0x0055, "MFX Parameter 18", "SDKF_MFX_PRM18", 32768, 12768, 52768, INTEGER4x4, "mfx", 21),
    Node:new(0x0059, "MFX Parameter 19", "SDKF_MFX_PRM19", 32768, 12768, 52768, INTEGER4x4, "mfx", 22),
    Node:new(0x005D, "MFX Parameter 20", "SDKF_MFX_PRM20", 32768, 12768, 52768, INTEGER4x4, "mfx", 23),
    Node:new(0x0061, "MFX Parameter 21", "SDKF_MFX_PRM21", 32768, 12768, 52768, INTEGER4x4, "mfx", 24),
    Node:new(0x0065, "MFX Parameter 22", "SDKF_MFX_PRM22", 32768, 12768, 52768, INTEGER4x4, "mfx", 25),
    Node:new(0x0069, "MFX Parameter 23", "SDKF_MFX_PRM23", 32768, 12768, 52768, INTEGER4x4, "mfx", 26),
    Node:new(0x006D, "MFX Parameter 24", "SDKF_MFX_PRM24", 32768, 12768, 52768, INTEGER4x4, "mfx", 27),
    Node:new(0x0071, "MFX Parameter 25", "SDKF_MFX_PRM25", 32768, 12768, 52768, INTEGER4x4, "mfx", 28),
    Node:new(0x0075, "MFX Parameter 26", "SDKF_MFX_PRM26", 32768, 12768, 52768, INTEGER4x4, "mfx", 29),
    Node:new(0x0079, "MFX Parameter 27", "SDKF_MFX_PRM27", 32768, 12768, 52768, INTEGER4x4, "mfx", 30),
    Node:new(0x007D, "MFX Parameter 28", "SDKF_MFX_PRM28", 32768, 12768, 52768, INTEGER4x4, "mfx", 31),
    Node:new(0x0101, "MFX Parameter 29", "SDKF_MFX_PRM29", 32768, 12768, 52768, INTEGER4x4, "mfx", 32),
    Node:new(0x0105, "MFX Parameter 30", "SDKF_MFX_PRM30", 32768, 12768, 52768, INTEGER4x4, "mfx", 33),
    Node:new(0x0109, "MFX Parameter 31", "SDKF_MFX_PRM31", 32768, 12768, 52768, INTEGER4x4, "mfx", 34),
    Node:new(0x010D, "MFX Parameter 32", "SDKF_MFX_PRM32", 32768, 12768, 52768, INTEGER4x4, "mfx", 35),
}

local KCQ = --  Kit Common Comp/EQ
{
    Node:new(0x0000, "Comp1 Switch", "SDKCQ_COMP1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0001, "Comp1 Attack Time", "SDKCQ_COMP1_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x0002, "Comp1 Release Time", "SDKCQ_COMP1_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x0003, "Comp1 Threshold", "SDKCQ_COMP1_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0004, "Comp1 Ratio", "SDKCQ_COMP1_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x0005, "Comp1 Output Gain", "SDKCQ_COMP1_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x0006, "EQ1 Switch", "SDKCQ_EQ1_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0007, "EQ1 Low Freq", "SDKCQ_EQ1_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0008, "EQ1 Low Gain", "SDKCQ_EQ1_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0009, "EQ1 Mid Freq", "SDKCQ_EQ1_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x000A, "EQ1 Mid Gain", "SDKCQ_EQ1_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x000B, "EQ1 Mid Q", "SDKCQ_EQ1_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x000C, "EQ1 High Freq", "SDKCQ_EQ1_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x000D, "EQ1 High Gain", "SDKCQ_EQ1_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x000E, "Comp2 Switch", "SDKCQ_COMP2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x000F, "Comp2 Attack Time", "SDKCQ_COMP2_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x0010, "Comp2 Release Time", "SDKCQ_COMP2_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x0011, "Comp2 Threshold", "SDKCQ_COMP2_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Comp2 Ratio", "SDKCQ_COMP2_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x0013, "Comp2 Output Gain", "SDKCQ_COMP2_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x0014, "EQ2 Switch", "SDKCQ_EQ2_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0015, "EQ2 Low Freq", "SDKCQ_EQ2_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0016, "EQ2 Low Gain", "SDKCQ_EQ2_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0017, "EQ2 Mid Freq", "SDKCQ_EQ2_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0018, "EQ2 Mid Gain", "SDKCQ_EQ2_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0019, "EQ2 Mid Q", "SDKCQ_EQ2_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x001A, "EQ2 High Freq", "SDKCQ_EQ2_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x001B, "EQ2 High Gain", "SDKCQ_EQ2_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x001C, "Comp3 Switch", "SDKCQ_COMP3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x001D, "Comp3 Attack Time", "SDKCQ_COMP3_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x001E, "Comp3 Release Time", "SDKCQ_COMP3_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x001F, "Comp3 Threshold", "SDKCQ_COMP3_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x0020, "Comp3 Ratio", "SDKCQ_COMP3_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x0021, "Comp3 Output Gain", "SDKCQ_COMP3_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x0022, "EQ3 Switch", "SDKCQ_EQ3_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0023, "EQ3 Low Freq", "SDKCQ_EQ3_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0024, "EQ3 Low Gain", "SDKCQ_EQ3_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0025, "EQ3 Mid Freq", "SDKCQ_EQ3_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0026, "EQ3 Mid Gain", "SDKCQ_EQ3_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0027, "EQ3 Mid Q", "SDKCQ_EQ3_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0028, "EQ3 High Freq", "SDKCQ_EQ3_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0029, "EQ3 High Gain", "SDKCQ_EQ3_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x002A, "Comp4 Switch", "SDKCQ_COMP4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x002B, "Comp4 Attack Time", "SDKCQ_COMP4_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x002C, "Comp4 Release Time", "SDKCQ_COMP4_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x002D, "Comp4 Threshold", "SDKCQ_COMP4_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x002E, "Comp4 Ratio", "SDKCQ_COMP4_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x002F, "Comp4 Output Gain", "SDKCQ_COMP4_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x0030, "EQ4 Switch", "SDKCQ_EQ4_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0031, "EQ4 Low Freq", "SDKCQ_EQ4_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0032, "EQ4 Low Gain", "SDKCQ_EQ4_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0033, "EQ4 Mid Freq", "SDKCQ_EQ4_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0034, "EQ4 Mid Gain", "SDKCQ_EQ4_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0035, "EQ4 Mid Q", "SDKCQ_EQ4_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0036, "EQ4 High Freq", "SDKCQ_EQ4_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0037, "EQ4 High Gain", "SDKCQ_EQ4_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0038, "Comp5 Switch", "SDKCQ_COMP5_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0039, "Comp5 Attack Time", "SDKCQ_COMP5_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x003A, "Comp5 Release Time", "SDKCQ_COMP5_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x003B, "Comp5 Threshold", "SDKCQ_COMP5_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x003C, "Comp5 Ratio", "SDKCQ_COMP5_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x003D, "Comp5 Output Gain", "SDKCQ_COMP5_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x003E, "EQ5 Switch", "SDKCQ_EQ5_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x003F, "EQ5 Low Freq", "SDKCQ_EQ5_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x0040, "EQ5 Low Gain", "SDKCQ_EQ5_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0041, "EQ5 Mid Freq", "SDKCQ_EQ5_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0042, "EQ5 Mid Gain", "SDKCQ_EQ5_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0043, "EQ5 Mid Q", "SDKCQ_EQ5_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0044, "EQ5 High Freq", "SDKCQ_EQ5_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0045, "EQ5 High Gain", "SDKCQ_EQ5_HIGHGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0046, "Comp6 Switch", "SDKCQ_COMP6_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x0047, "Comp6 Attack Time", "SDKCQ_COMP6_ATTACK", 0, 0, 31, INTEGER1x5),
    Node:new(0x0048, "Comp6 Release Time", "SDKCQ_COMP6_RELEASE", 0, 0, 23, INTEGER1x5),
    Node:new(0x0049, "Comp6 Threshold", "SDKCQ_COMP6_THRESHOLD", 0, 0, 127, INTEGER1x7),
    Node:new(0x004A, "Comp6 Ratio", "SDKCQ_COMP6_RATIO", 0, 0, 19, INTEGER1x5),
    Node:new(0x004B, "Comp6 Output Gain", "SDKCQ_COMP6_POSTGAIN", 0, 0, 24, INTEGER1x5),
    Node:new(0x004C, "EQ6 Switch", "SDKCQ_EQ6_SW", 0, 0, 1, INTEGER1x1),
    Node:new(0x004D, "EQ6 Low Freq", "SDKCQ_EQ6_LOWFREQ", 0, 0, 1, INTEGER1x1),
    Node:new(0x004E, "EQ6 Low Gain", "SDKCQ_EQ6_LOWGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x004F, "EQ6 Mid Freq", "SDKCQ_EQ6_MIDFREQ", 0, 0, 16, INTEGER1x5),
    Node:new(0x0050, "EQ6 Mid Gain", "SDKCQ_EQ6_MIDGAIN", 15, 0, 30, INTEGER1x5),
    Node:new(0x0051, "EQ6 Mid Q", "SDKCQ_EQ6_MIDQ", 0, 0, 4, INTEGER1x3),
    Node:new(0x0052, "EQ6 High Freq", "SDKCQ_EQ6_HIGHFREQ", 0, 0, 2, INTEGER1x2),
    Node:new(0x0053, "EQ6 High Gain", "SDKCQ_EQ6_HIGHGAIN", 15, 0, 30, INTEGER1x5),
}

local KN = --  Kit Note
{
    Node:new(0x0000, "Inst Number", "SDKN_INST_NUM", 1, 0, 512, INTEGER4x4),
    Node:new(0x0004, "Level", "SDKN_INST_LEVEL", 100, 0, 127, INTEGER1x7),
    Node:new(0x0005, "Pan", "SDKN_INST_PAN", 64, 0, 127, INTEGER1x7),
    Node:new(0x0006, "Chorus Send Level", "SDKN_INST_CHO_SEND", 0, 0, 127, INTEGER1x7),
    Node:new(0x0007, "Reverb Send Level", "SDKN_INST_REV_SEND", 64, 0, 127, INTEGER1x7),
    Node:new(0x0008, "Tune", "SDKN_PIT_FINE", 128, 8, 248, INTEGER4x4),
    Node:new(0x000C, "Attack", "SDKN_ATTACK", 100, 0, 100, INTEGER1x7),
    Node:new(0x000D, "Decay", "SDKN_DECAY", 64, 1, 64, INTEGER1x7),
    Node:new(0x000E, "Brilliance", "SDKN_BRIGHTNESS", 64, 49, 76, INTEGER1x5),
    Node:new(0x000F, "Variation", "SDKN_FLAM_CTRL", 0, 0, 7, INTEGER1x7),
    Node:new(0x0010, "Dynamic Range", "SDKN_DYN_RANG", 32, 0, 63, INTEGER1x6),
    Node:new(0x0011, "Stereo Width", "SDKN_STEREO_WIDTH", 127, 0, 127, INTEGER1x7),
    Node:new(0x0012, "Output Assign", "SDKN_OUTPUT_ASSIGN", 0, 0, 6, INTEGER1x3),
}

local PAT = --  PCM Tone
{
    Node:new_parent(0x0, 0, "PCM Tone Common", "_PC", PC),
    Node:new_parent(0x200, 0, "PCM Tone Common MFX", "_PF", PF),
    Node:new_parent(0x1000, 110, "PCM Tone PMT (Partial Mix Table)", "_PX", PX),
    Node:new_parent(0x2000, 151, "PCM Tone Partial (Partial 1)", "_PT1", PT),
    Node:new_parent(0x2200, 289, "PCM Tone Partial (Partial 2)", "_PT2", PT),
    Node:new_parent(0x2400, 427, "PCM Tone Partial (Partial 3)", "_PT3", PT),
    Node:new_parent(0x2600, 565, "PCM Tone Partial (Partial 4)", "_PT4", PT),
    Node:new_parent(0x3000, 703, "PCM Tone Common 2", "_PC2", PC2)
}

local RHY = --  Rhythm Set
{
    Node:new_parent(0x0, 0, "Rhythm Set Common", "_RC", RC),
    Node:new_parent(0x200, 2, "Rhythm Set Common MFX", "_RF", RF),
    Node:new_parent(0x800, 50, "Rhythm Set Common Comp/EQ", "_RCQ", RCQ),
    Node:new_parent(0x1000, 134, "Rhythm Set Partial (Key # 21)", "_RT21", RT),
    Node:new_parent(0x1200, 279, "Rhythm Set Partial (Key # 22)", "_RT22", RT),
    Node:new_parent(0x1400, 424, "Rhythm Set Partial (Key # 23)", "_RT23", RT),
    Node:new_parent(0x1600, 569, "Rhythm Set Partial (Key # 24)", "_RT24", RT),
    Node:new_parent(0x1800, 714, "Rhythm Set Partial (Key # 25)", "_RT25", RT),
    Node:new_parent(0x1A00, 859, "Rhythm Set Partial (Key # 26)", "_RT26", RT),
    Node:new_parent(0x1C00, 1004, "Rhythm Set Partial (Key # 27)", "_RT27", RT),
    Node:new_parent(0x1E00, 1149, "Rhythm Set Partial (Key # 28)", "_RT28", RT),
    Node:new_parent(0x2000, 1294, "Rhythm Set Partial (Key # 29)", "_RT29", RT),
    Node:new_parent(0x2200, 1439, "Rhythm Set Partial (Key # 30)", "_RT30", RT),
    Node:new_parent(0x2400, 1584, "Rhythm Set Partial (Key # 31)", "_RT31", RT),
    Node:new_parent(0x2600, 1729, "Rhythm Set Partial (Key # 32)", "_RT32", RT),
    Node:new_parent(0x2800, 1874, "Rhythm Set Partial (Key # 33)", "_RT33", RT),
    Node:new_parent(0x2A00, 2019, "Rhythm Set Partial (Key # 34)", "_RT34", RT),
    Node:new_parent(0x2C00, 2164, "Rhythm Set Partial (Key # 35)", "_RT35", RT),
    Node:new_parent(0x2E00, 2309, "Rhythm Set Partial (Key # 36)", "_RT36", RT),
    Node:new_parent(0x3000, 2454, "Rhythm Set Partial (Key # 37)", "_RT37", RT),
    Node:new_parent(0x3200, 2599, "Rhythm Set Partial (Key # 38)", "_RT38", RT),
    Node:new_parent(0x3400, 2744, "Rhythm Set Partial (Key # 39)", "_RT39", RT),
    Node:new_parent(0x3600, 2889, "Rhythm Set Partial (Key # 40)", "_RT40", RT),
    Node:new_parent(0x3800, 3034, "Rhythm Set Partial (Key # 41)", "_RT41", RT),
    Node:new_parent(0x3A00, 3179, "Rhythm Set Partial (Key # 42)", "_RT42", RT),
    Node:new_parent(0x3C00, 3324, "Rhythm Set Partial (Key # 43)", "_RT43", RT),
    Node:new_parent(0x3E00, 3469, "Rhythm Set Partial (Key # 44)", "_RT44", RT),
    Node:new_parent(0x4000, 3614, "Rhythm Set Partial (Key # 45)", "_RT45", RT),
    Node:new_parent(0x4200, 3759, "Rhythm Set Partial (Key # 46)", "_RT46", RT),
    Node:new_parent(0x4400, 3904, "Rhythm Set Partial (Key # 47)", "_RT47", RT),
    Node:new_parent(0x4600, 4049, "Rhythm Set Partial (Key # 48)", "_RT48", RT),
    Node:new_parent(0x4800, 4194, "Rhythm Set Partial (Key # 49)", "_RT49", RT),
    Node:new_parent(0x4A00, 4339, "Rhythm Set Partial (Key # 50)", "_RT50", RT),
    Node:new_parent(0x4C00, 4484, "Rhythm Set Partial (Key # 51)", "_RT51", RT),
    Node:new_parent(0x4E00, 4629, "Rhythm Set Partial (Key # 52)", "_RT52", RT),
    Node:new_parent(0x5000, 4774, "Rhythm Set Partial (Key # 53)", "_RT53", RT),
    Node:new_parent(0x5200, 4919, "Rhythm Set Partial (Key # 54)", "_RT54", RT),
    Node:new_parent(0x5400, 5064, "Rhythm Set Partial (Key # 55)", "_RT55", RT),
    Node:new_parent(0x5600, 5209, "Rhythm Set Partial (Key # 56)", "_RT56", RT),
    Node:new_parent(0x5800, 5354, "Rhythm Set Partial (Key # 57)", "_RT57", RT),
    Node:new_parent(0x5A00, 5499, "Rhythm Set Partial (Key # 58)", "_RT58", RT),
    Node:new_parent(0x5C00, 5644, "Rhythm Set Partial (Key # 59)", "_RT59", RT),
    Node:new_parent(0x5E00, 5789, "Rhythm Set Partial (Key # 60)", "_RT60", RT),
    Node:new_parent(0x6000, 5934, "Rhythm Set Partial (Key # 61)", "_RT61", RT),
    Node:new_parent(0x6200, 6079, "Rhythm Set Partial (Key # 62)", "_RT62", RT),
    Node:new_parent(0x6400, 6224, "Rhythm Set Partial (Key # 63)", "_RT63", RT),
    Node:new_parent(0x6600, 6369, "Rhythm Set Partial (Key # 64)", "_RT64", RT),
    Node:new_parent(0x6800, 6514, "Rhythm Set Partial (Key # 65)", "_RT65", RT),
    Node:new_parent(0x6A00, 6659, "Rhythm Set Partial (Key # 66)", "_RT66", RT),
    Node:new_parent(0x6C00, 6804, "Rhythm Set Partial (Key # 67)", "_RT67", RT),
    Node:new_parent(0x6E00, 6949, "Rhythm Set Partial (Key # 68)", "_RT68", RT),
    Node:new_parent(0x7000, 7094, "Rhythm Set Partial (Key # 69)", "_RT69", RT),
    Node:new_parent(0x7200, 7239, "Rhythm Set Partial (Key # 70)", "_RT70", RT),
    Node:new_parent(0x7400, 7384, "Rhythm Set Partial (Key # 71)", "_RT71", RT),
    Node:new_parent(0x7600, 7529, "Rhythm Set Partial (Key # 72)", "_RT72", RT),
    Node:new_parent(0x7800, 7674, "Rhythm Set Partial (Key # 73)", "_RT73", RT),
    Node:new_parent(0x7A00, 7819, "Rhythm Set Partial (Key # 74)", "_RT74", RT),
    Node:new_parent(0x7C00, 7964, "Rhythm Set Partial (Key # 75)", "_RT75", RT),
    Node:new_parent(0x7E00, 8109, "Rhythm Set Partial (Key # 76)", "_RT76", RT),
    Node:new_parent(0x10000, 8254, "Rhythm Set Partial (Key # 77)", "_RT77", RT),
    Node:new_parent(0x10200, 8399, "Rhythm Set Partial (Key # 78)", "_RT78", RT),
    Node:new_parent(0x10400, 8544, "Rhythm Set Partial (Key # 79)", "_RT79", RT),
    Node:new_parent(0x10600, 8689, "Rhythm Set Partial (Key # 80)", "_RT80", RT),
    Node:new_parent(0x10800, 8834, "Rhythm Set Partial (Key # 81)", "_RT81", RT),
    Node:new_parent(0x10A00, 8979, "Rhythm Set Partial (Key # 82)", "_RT82", RT),
    Node:new_parent(0x10C00, 9124, "Rhythm Set Partial (Key # 83)", "_RT83", RT),
    Node:new_parent(0x10E00, 9269, "Rhythm Set Partial (Key # 84)", "_RT84", RT),
    Node:new_parent(0x11000, 9414, "Rhythm Set Partial (Key # 85)", "_RT85", RT),
    Node:new_parent(0x11200, 9559, "Rhythm Set Partial (Key # 86)", "_RT86", RT),
    Node:new_parent(0x11400, 9704, "Rhythm Set Partial (Key # 87)", "_RT87", RT),
    Node:new_parent(0x11600, 9849, "Rhythm Set Partial (Key # 88)", "_RT88", RT),
    Node:new_parent(0x11800, 9994, "Rhythm Set Partial (Key # 89)", "_RT89", RT),
    Node:new_parent(0x11A00, 10139, "Rhythm Set Partial (Key # 90)", "_RT90", RT),
    Node:new_parent(0x11C00, 10284, "Rhythm Set Partial (Key # 91)", "_RT91", RT),
    Node:new_parent(0x11E00, 10429, "Rhythm Set Partial (Key # 92)", "_RT92", RT),
    Node:new_parent(0x12000, 10574, "Rhythm Set Partial (Key # 93)", "_RT93", RT),
    Node:new_parent(0x12200, 10719, "Rhythm Set Partial (Key # 94)", "_RT94", RT),
    Node:new_parent(0x12400, 10864, "Rhythm Set Partial (Key # 95)", "_RT95", RT),
    Node:new_parent(0x12600, 11009, "Rhythm Set Partial (Key # 96)", "_RT96", RT),
    Node:new_parent(0x12800, 11154, "Rhythm Set Partial (Key # 97)", "_RT97", RT),
    Node:new_parent(0x12A00, 11299, "Rhythm Set Partial (Key # 98)", "_RT98", RT),
    Node:new_parent(0x12C00, 11444, "Rhythm Set Partial (Key # 99)", "_RT99", RT),
    Node:new_parent(0x12E00, 11589, "Rhythm Set Partial (Key # 100)", "_RT100", RT),
    Node:new_parent(0x13000, 11734, "Rhythm Set Partial (Key # 101)", "_RT101", RT),
    Node:new_parent(0x13200, 11879, "Rhythm Set Partial (Key # 102)", "_RT102", RT),
    Node:new_parent(0x13400, 12024, "Rhythm Set Partial (Key # 103)", "_RT103", RT),
    Node:new_parent(0x13600, 12169, "Rhythm Set Partial (Key # 104)", "_RT104", RT),
    Node:new_parent(0x13800, 12314, "Rhythm Set Partial (Key # 105)", "_RT105", RT),
    Node:new_parent(0x13A00, 12459, "Rhythm Set Partial (Key # 106)", "_RT106", RT),
    Node:new_parent(0x13C00, 12604, "Rhythm Set Partial (Key # 107)", "_RT107", RT),
    Node:new_parent(0x13E00, 12749, "Rhythm Set Partial (Key # 108)", "_RT108", RT),
    Node:new_parent(0x20000, 12894, "Rhythm Set Common 2", "_RC2", RC2),
}

local SHPAT = --  Synth Tone
{
    Node:new_parent(0x0, 0, "Synth Tone Common", "_SHPC", SHPC),
    Node:new_parent(0x200, 25, "Synth Tone MFX", "_SHPF", SHPF),
    Node:new_parent(0x2000, 73, "Synth Tone Partial (1)", "_SHPT1", SHPT),
    Node:new_parent(0x2100, 127, "Synth Tone Partial (2)", "_SHPT2", SHPT),
    Node:new_parent(0x2200, 181, "Synth Tone Partial (3)", "_SHPT3", SHPT),
    Node:new_parent(0x5000, 235, "Synth Tone Modify", "_SHPTM", SHPTM)
}

local SNTONE = --  SuperNATURAL Tone
{
    Node:new_parent(0x0, 0, "SN Tone Common", "_SNTC", SNTC),
    Node:new_parent(0x200, 0, "SN Tone MFX", "_SNTF", SNTF)
}

local KIT = --  Drum Kit
{
    Node:new_parent(0x0, 0, "Drum Kit Common", "_KC", KC),
    Node:new_parent(0x200, 5, "Drum Kit MFX", "_KF", KF),
    Node:new_parent(0x800, 53, "Drum Kit Common Comp/EQ", "_KCQ", KCQ),
    Node:new_parent(0x1000, 137, "Drum Kit Note (Key # 27)", "_KN27", KN),
    Node:new_parent(0x1100, 150, "Drum Kit Note (Key # 28)", "_KN28", KN),
    Node:new_parent(0x1200, 163, "Drum Kit Note (Key # 29)", "_KN29", KN),
    Node:new_parent(0x1300, 176, "Drum Kit Note (Key # 30)", "_KN30", KN),
    Node:new_parent(0x1400, 189, "Drum Kit Note (Key # 31)", "_KN31", KN),
    Node:new_parent(0x1500, 202, "Drum Kit Note (Key # 32)", "_KN32", KN),
    Node:new_parent(0x1600, 215, "Drum Kit Note (Key # 33)", "_KN33", KN),
    Node:new_parent(0x1700, 228, "Drum Kit Note (Key # 34)", "_KN34", KN),
    Node:new_parent(0x1800, 241, "Drum Kit Note (Key # 35)", "_KN35", KN),
    Node:new_parent(0x1900, 254, "Drum Kit Note (Key # 36)", "_KN36", KN),
    Node:new_parent(0x1A00, 267, "Drum Kit Note (Key # 37)", "_KN37", KN),
    Node:new_parent(0x1B00, 280, "Drum Kit Note (Key # 38)", "_KN38", KN),
    Node:new_parent(0x1C00, 293, "Drum Kit Note (Key # 39)", "_KN39", KN),
    Node:new_parent(0x1D00, 306, "Drum Kit Note (Key # 40)", "_KN40", KN),
    Node:new_parent(0x1E00, 319, "Drum Kit Note (Key # 41)", "_KN41", KN),
    Node:new_parent(0x1F00, 332, "Drum Kit Note (Key # 42)", "_KN42", KN),
    Node:new_parent(0x2000, 345, "Drum Kit Note (Key # 43)", "_KN43", KN),
    Node:new_parent(0x2100, 358, "Drum Kit Note (Key # 44)", "_KN44", KN),
    Node:new_parent(0x2200, 371, "Drum Kit Note (Key # 45)", "_KN45", KN),
    Node:new_parent(0x2300, 384, "Drum Kit Note (Key # 46)", "_KN46", KN),
    Node:new_parent(0x2400, 397, "Drum Kit Note (Key # 47)", "_KN47", KN),
    Node:new_parent(0x2500, 410, "Drum Kit Note (Key # 48)", "_KN48", KN),
    Node:new_parent(0x2600, 423, "Drum Kit Note (Key # 49)", "_KN49", KN),
    Node:new_parent(0x2700, 436, "Drum Kit Note (Key # 50)", "_KN50", KN),
    Node:new_parent(0x2800, 449, "Drum Kit Note (Key # 51)", "_KN51", KN),
    Node:new_parent(0x2900, 462, "Drum Kit Note (Key # 52)", "_KN52", KN),
    Node:new_parent(0x2A00, 475, "Drum Kit Note (Key # 53)", "_KN53", KN),
    Node:new_parent(0x2B00, 488, "Drum Kit Note (Key # 54)", "_KN54", KN),
    Node:new_parent(0x2C00, 501, "Drum Kit Note (Key # 55)", "_KN55", KN),
    Node:new_parent(0x2D00, 514, "Drum Kit Note (Key # 56)", "_KN56", KN),
    Node:new_parent(0x2E00, 527, "Drum Kit Note (Key # 57)", "_KN57", KN),
    Node:new_parent(0x2F00, 540, "Drum Kit Note (Key # 58)", "_KN58", KN),
    Node:new_parent(0x3000, 553, "Drum Kit Note (Key # 59)", "_KN59", KN),
    Node:new_parent(0x3100, 566, "Drum Kit Note (Key # 60)", "_KN60", KN),
    Node:new_parent(0x3200, 579, "Drum Kit Note (Key # 61)", "_KN61", KN),
    Node:new_parent(0x3300, 592, "Drum Kit Note (Key # 62)", "_KN62", KN),
    Node:new_parent(0x3400, 605, "Drum Kit Note (Key # 63)", "_KN63", KN),
    Node:new_parent(0x3500, 618, "Drum Kit Note (Key # 64)", "_KN64", KN),
    Node:new_parent(0x3600, 631, "Drum Kit Note (Key # 65)", "_KN65", KN),
    Node:new_parent(0x3700, 644, "Drum Kit Note (Key # 66)", "_KN66", KN),
    Node:new_parent(0x3800, 657, "Drum Kit Note (Key # 67)", "_KN67", KN),
    Node:new_parent(0x3900, 670, "Drum Kit Note (Key # 68)", "_KN68", KN),
    Node:new_parent(0x3A00, 683, "Drum Kit Note (Key # 69)", "_KN69", KN),
    Node:new_parent(0x3B00, 696, "Drum Kit Note (Key # 70)", "_KN70", KN),
    Node:new_parent(0x3C00, 709, "Drum Kit Note (Key # 71)", "_KN71", KN),
    Node:new_parent(0x3D00, 722, "Drum Kit Note (Key # 72)", "_KN72", KN),
    Node:new_parent(0x3E00, 735, "Drum Kit Note (Key # 73)", "_KN73", KN),
    Node:new_parent(0x3F00, 748, "Drum Kit Note (Key # 74)", "_KN74", KN),
    Node:new_parent(0x4000, 761, "Drum Kit Note (Key # 75)", "_KN75", KN),
    Node:new_parent(0x4100, 774, "Drum Kit Note (Key # 76)", "_KN76", KN),
    Node:new_parent(0x4200, 787, "Drum Kit Note (Key # 77)", "_KN77", KN),
    Node:new_parent(0x4300, 800, "Drum Kit Note (Key # 78)", "_KN78", KN),
    Node:new_parent(0x4400, 813, "Drum Kit Note (Key # 79)", "_KN79", KN),
    Node:new_parent(0x4500, 826, "Drum Kit Note (Key # 80)", "_KN80", KN),
    Node:new_parent(0x4600, 839, "Drum Kit Note (Key # 81)", "_KN81", KN),
    Node:new_parent(0x4700, 852, "Drum Kit Note (Key # 82)", "_KN82", KN),
    Node:new_parent(0x4800, 865, "Drum Kit Note (Key # 83)", "_KN83", KN),
    Node:new_parent(0x4900, 878, "Drum Kit Note (Key # 84)", "_KN84", KN),
    Node:new_parent(0x4A00, 891, "Drum Kit Note (Key # 85)", "_KN85", KN),
    Node:new_parent(0x4B00, 904, "Drum Kit Note (Key # 86)", "_KN86", KN),
    Node:new_parent(0x4C00, 917, "Drum Kit Note (Key # 87)", "_KN87", KN),
    Node:new_parent(0x4D00, 930, "Drum Kit Note (Key # 88)", "_KN88", KN),
}

local SETUP =
{
    Node:new_parent(0x0, 0, "Setup", "_STP", STP),
}

local SYS =
{
    Node:new_parent(0x0, 0, "System Common", "_SC", SC),
}

local PRF = -- Studio Set
{
    Node:new_parent(0x0, 0, "Studio Set Common", "_FC", FC),
    Node:new_parent(0x400, 51, "Studio Set Common Chorus", "_FH", FH),
    Node:new_parent(0x600, 75, "Studio Set Common Reverb", "_FV", FV),
    Node:new_parent(0x800, 102, "Studio Set Common RSS", "_FRSS", FRSS),
    Node:new_parent(0x900, 115, "Studio Set Mastering EQ", "_FMEQ", FMEQ),
    Node:new_parent(0x1000, 122, "Studio Set MIDI (Channel 1)", "_FM1", FM),
    Node:new_parent(0x1100, 123, "Studio Set MIDI (Channel 2)", "_FM2", FM),
    Node:new_parent(0x1200, 124, "Studio Set MIDI (Channel 3)", "_FM3", FM),
    Node:new_parent(0x1300, 125, "Studio Set MIDI (Channel 4)", "_FM4", FM),
    Node:new_parent(0x1400, 126, "Studio Set MIDI (Channel 5)", "_FM5", FM),
    Node:new_parent(0x1500, 127, "Studio Set MIDI (Channel 6)", "_FM6", FM),
    Node:new_parent(0x1600, 128, "Studio Set MIDI (Channel 7)", "_FM7", FM),
    Node:new_parent(0x1700, 129, "Studio Set MIDI (Channel 8)", "_FM8", FM),
    Node:new_parent(0x1800, 130, "Studio Set MIDI (Channel 9)", "_FM9", FM),
    Node:new_parent(0x1900, 131, "Studio Set MIDI (Channel 10)", "_FM10", FM),
    Node:new_parent(0x1A00, 132, "Studio Set MIDI (Channel 11)", "_FM11", FM),
    Node:new_parent(0x1B00, 133, "Studio Set MIDI (Channel 12)", "_FM12", FM),
    Node:new_parent(0x1C00, 134, "Studio Set MIDI (Channel 13)", "_FM13", FM),
    Node:new_parent(0x1D00, 135, "Studio Set MIDI (Channel 14)", "_FM14", FM),
    Node:new_parent(0x1E00, 136, "Studio Set MIDI (Channel 15)", "_FM15", FM),
    Node:new_parent(0x1F00, 137, "Studio Set MIDI (Channel 16)", "_FM16", FM),
    Node:new_parent(0x2000, 138, "Studio Set Part (Part 1)", "_FP1", FP),
    Node:new_parent(0x2100, 208, "Studio Set Part (Part 2)", "_FP2", FP),
    Node:new_parent(0x2200, 278, "Studio Set Part (Part 3)", "_FP3", FP),
    Node:new_parent(0x2300, 348, "Studio Set Part (Part 4)", "_FP4", FP),
    Node:new_parent(0x2400, 418, "Studio Set Part (Part 5)", "_FP5", FP),
    Node:new_parent(0x2500, 488, "Studio Set Part (Part 6)", "_FP6", FP),
    Node:new_parent(0x2600, 558, "Studio Set Part (Part 7)", "_FP7", FP),
    Node:new_parent(0x2700, 628, "Studio Set Part (Part 8)", "_FP8", FP),
    Node:new_parent(0x2800, 698, "Studio Set Part (Part 9)", "_FP9", FP),
    Node:new_parent(0x2900, 768, "Studio Set Part (Part 10)", "_FP10", FP),
    Node:new_parent(0x2A00, 838, "Studio Set Part (Part 11)", "_FP11", FP),
    Node:new_parent(0x2B00, 908, "Studio Set Part (Part 12)", "_FP12", FP),
    Node:new_parent(0x2C00, 978, "Studio Set Part (Part 13)", "_FP13", FP),
    Node:new_parent(0x2D00, 1048, "Studio Set Part (Part 14)", "_FP14", FP),
    Node:new_parent(0x2E00, 1118, "Studio Set Part (Part 15)", "_FP15", FP),
    Node:new_parent(0x2F00, 1188, "Studio Set Part (Part 16)", "_FP16", FP),
    Node:new_parent(0x5000, 1258, "Studio Set Part EQ (Part 1)", "_FPEQ1", FPEQ),
    Node:new_parent(0x5100, 1266, "Studio Set Part EQ (Part 2)", "_FPEQ2", FPEQ),
    Node:new_parent(0x5200, 1274, "Studio Set Part EQ (Part 3)", "_FPEQ3", FPEQ),
    Node:new_parent(0x5300, 1282, "Studio Set Part EQ (Part 4)", "_FPEQ4", FPEQ),
    Node:new_parent(0x5400, 1290, "Studio Set Part EQ (Part 5)", "_FPEQ5", FPEQ),
    Node:new_parent(0x5500, 1298, "Studio Set Part EQ (Part 6)", "_FPEQ6", FPEQ),
    Node:new_parent(0x5600, 1306, "Studio Set Part EQ (Part 7)", "_FPEQ7", FPEQ),
    Node:new_parent(0x5700, 1314, "Studio Set Part EQ (Part 8)", "_FPEQ8", FPEQ),
    Node:new_parent(0x5800, 1322, "Studio Set Part EQ (Part 9)", "_FPEQ9", FPEQ),
    Node:new_parent(0x5900, 1330, "Studio Set Part EQ (Part 10)", "_FPEQ10", FPEQ),
    Node:new_parent(0x5A00, 1338, "Studio Set Part EQ (Part 11)", "_FPEQ11", FPEQ),
    Node:new_parent(0x5B00, 1346, "Studio Set Part EQ (Part 12)", "_FPEQ12", FPEQ),
    Node:new_parent(0x5C00, 1354, "Studio Set Part EQ (Part 13)", "_FPEQ13", FPEQ),
    Node:new_parent(0x5D00, 1362, "Studio Set Part EQ (Part 14)", "_FPEQ14", FPEQ),
    Node:new_parent(0x5E00, 1370, "Studio Set Part EQ (Part 15)", "_FPEQ15", FPEQ),
    Node:new_parent(0x5F00, 1378, "Studio Set Part EQ (Part 16)", "_FPEQ16", FPEQ),
}

local FPART = --  Temporary Tone
{
    Node:new_parent(0x0, 0, "Temporary PCM Tone", "_PAT", PAT),
    Node:new_parent(0x10000, 743, "Temporary Synth Tone", "_SHPAT", SHPAT),
    Node:new_parent(0x20000, 1011, "Temporary SuperNATURAL Tone", "_SNTONE", SNTONE),
    Node:new_parent(0x30000, 1109, "Temporary Drum Kit", "_KIT", KIT),
    Node:new_parent(0x100000, 2052, "Temporary Rhythm Set", "_RHY", RHY),
}

local EDITOR_NOP = {}

I7ROOT_NODE =
{
    Node:new_parent(0x1000000, 0, "Setup", "_SETUP", SETUP),
    Node:new_parent(0x2000000, 56, "System", "_SYS", SYS),
    Node:new_parent(0xF000000, 97, "(for editor nop) ", "_EDITOR_NOP", EDITOR_NOP, 0),
    Node:new_parent(0x18000000, 97, "Temporary Studio Set", "_PRF", PRF),
    Node:new_parent(0x19000000, 1483, "Temporary Tone (Studio Mode Part 1)", "_FPART1", FPART),
    Node:new_parent(0x19200000, 16463, "Temporary Tone (Studio Mode Part 2)", "_FPART2", FPART),
    Node:new_parent(0x19400000, 31443, "Temporary Tone (Studio Mode Part 3)", "_FPART3", FPART),
    Node:new_parent(0x19600000, 46423, "Temporary Tone (Studio Mode Part 4)", "_FPART4", FPART),
    Node:new_parent(0x1A000000, 61403, "Temporary Tone (Studio Mode Part 5)", "_FPART5", FPART),
    Node:new_parent(0x1A200000, 76383, "Temporary Tone (Studio Mode Part 6)", "_FPART6", FPART),
    Node:new_parent(0x1A400000, 91363, "Temporary Tone (Studio Mode Part 7)", "_FPART7", FPART),
    Node:new_parent(0x1A600000, 106343, "Temporary Tone (Studio Mode Part 8)", "_FPART8", FPART),
    Node:new_parent(0x1B000000, 121323, "Temporary Tone (Studio Mode Part 9)", "_FPART9", FPART),
    Node:new_parent(0x1B200000, 136303, "Temporary Tone (Studio Mode Part 10)", "_FPART10", FPART),
    Node:new_parent(0x1B400000, 151283, "Temporary Tone (Studio Mode Part 11)", "_FPART11", FPART),
    Node:new_parent(0x1B600000, 166263, "Temporary Tone (Studio Mode Part 12)", "_FPART12", FPART),
    Node:new_parent(0x1C000000, 181243, "Temporary Tone (Studio Mode Part 13)", "_FPART13", FPART),
    Node:new_parent(0x1C200000, 196223, "Temporary Tone (Studio Mode Part 14)", "_FPART14", FPART),
    Node:new_parent(0x1C400000, 211203, "Temporary Tone (Studio Mode Part 15)", "_FPART15", FPART),
    Node:new_parent(0x1C600000, 226183, "Temporary Tone (Studio Mode Part 16)", "_FPART16", FPART),
}

function Get_Node(id)
-- {
--     NodeInfo result;
--     const Node* nodes = &root[0];
--     const Node* node = nullptr;
--     UInt numNodes = NumRootNodes;
--     std::string partId;
--     std::stringstream ss(id); 
--     while (std::getline(ss, partId, '-'))
--     {
--         if (partId == "PRM") 
--         {
--             // prm has no data representation
--             continue;
--         }
--         UInt localOffset = 0;
--         for (UInt i = 0; i < numNodes; ++i)
--         {
--             const Node* n = &nodes[i];
--             if (partId == std::string(n->id))
--             {
--                 result.addr += getModelIdAddress(partId);
--                 result.offset += n->offset;
--                 node = n;
--                 if (ss.eof()) 
--                 {
--                     result.offset += localOffset;
--                     result.node = node;
--                     return result;
--                 }
--                 nodes = &node->node[0];
--                 numNodes = node->numChildren;
--                 break;
--             }
--             localOffset += getByteSize(n->valueByteSizeType);
--         }
--         if (nodes == &root[0]) 
--         {
--             // found nothing
--             return result;
--         }
--     }
--     return result;
-- }
end

